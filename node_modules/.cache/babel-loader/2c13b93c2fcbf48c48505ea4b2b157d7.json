{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-query')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-query'], factory) : (global = global || self, factory(global.ReactQueryDevtools = {}, global.React, global.ReactQuery));\n})(this, function (exports, React, reactQuery) {\n  'use strict';\n\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _extends$1() {\n    _extends$1 = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends$1.apply(this, arguments);\n  }\n\n  var characterMap = {\n    \"À\": \"A\",\n    \"Á\": \"A\",\n    \"Â\": \"A\",\n    \"Ã\": \"A\",\n    \"Ä\": \"A\",\n    \"Å\": \"A\",\n    \"Ấ\": \"A\",\n    \"Ắ\": \"A\",\n    \"Ẳ\": \"A\",\n    \"Ẵ\": \"A\",\n    \"Ặ\": \"A\",\n    \"Æ\": \"AE\",\n    \"Ầ\": \"A\",\n    \"Ằ\": \"A\",\n    \"Ȃ\": \"A\",\n    \"Ç\": \"C\",\n    \"Ḉ\": \"C\",\n    \"È\": \"E\",\n    \"É\": \"E\",\n    \"Ê\": \"E\",\n    \"Ë\": \"E\",\n    \"Ế\": \"E\",\n    \"Ḗ\": \"E\",\n    \"Ề\": \"E\",\n    \"Ḕ\": \"E\",\n    \"Ḝ\": \"E\",\n    \"Ȇ\": \"E\",\n    \"Ì\": \"I\",\n    \"Í\": \"I\",\n    \"Î\": \"I\",\n    \"Ï\": \"I\",\n    \"Ḯ\": \"I\",\n    \"Ȋ\": \"I\",\n    \"Ð\": \"D\",\n    \"Ñ\": \"N\",\n    \"Ò\": \"O\",\n    \"Ó\": \"O\",\n    \"Ô\": \"O\",\n    \"Õ\": \"O\",\n    \"Ö\": \"O\",\n    \"Ø\": \"O\",\n    \"Ố\": \"O\",\n    \"Ṍ\": \"O\",\n    \"Ṓ\": \"O\",\n    \"Ȏ\": \"O\",\n    \"Ù\": \"U\",\n    \"Ú\": \"U\",\n    \"Û\": \"U\",\n    \"Ü\": \"U\",\n    \"Ý\": \"Y\",\n    \"à\": \"a\",\n    \"á\": \"a\",\n    \"â\": \"a\",\n    \"ã\": \"a\",\n    \"ä\": \"a\",\n    \"å\": \"a\",\n    \"ấ\": \"a\",\n    \"ắ\": \"a\",\n    \"ẳ\": \"a\",\n    \"ẵ\": \"a\",\n    \"ặ\": \"a\",\n    \"æ\": \"ae\",\n    \"ầ\": \"a\",\n    \"ằ\": \"a\",\n    \"ȃ\": \"a\",\n    \"ç\": \"c\",\n    \"ḉ\": \"c\",\n    \"è\": \"e\",\n    \"é\": \"e\",\n    \"ê\": \"e\",\n    \"ë\": \"e\",\n    \"ế\": \"e\",\n    \"ḗ\": \"e\",\n    \"ề\": \"e\",\n    \"ḕ\": \"e\",\n    \"ḝ\": \"e\",\n    \"ȇ\": \"e\",\n    \"ì\": \"i\",\n    \"í\": \"i\",\n    \"î\": \"i\",\n    \"ï\": \"i\",\n    \"ḯ\": \"i\",\n    \"ȋ\": \"i\",\n    \"ð\": \"d\",\n    \"ñ\": \"n\",\n    \"ò\": \"o\",\n    \"ó\": \"o\",\n    \"ô\": \"o\",\n    \"õ\": \"o\",\n    \"ö\": \"o\",\n    \"ø\": \"o\",\n    \"ố\": \"o\",\n    \"ṍ\": \"o\",\n    \"ṓ\": \"o\",\n    \"ȏ\": \"o\",\n    \"ù\": \"u\",\n    \"ú\": \"u\",\n    \"û\": \"u\",\n    \"ü\": \"u\",\n    \"ý\": \"y\",\n    \"ÿ\": \"y\",\n    \"Ā\": \"A\",\n    \"ā\": \"a\",\n    \"Ă\": \"A\",\n    \"ă\": \"a\",\n    \"Ą\": \"A\",\n    \"ą\": \"a\",\n    \"Ć\": \"C\",\n    \"ć\": \"c\",\n    \"Ĉ\": \"C\",\n    \"ĉ\": \"c\",\n    \"Ċ\": \"C\",\n    \"ċ\": \"c\",\n    \"Č\": \"C\",\n    \"č\": \"c\",\n    \"C̆\": \"C\",\n    \"c̆\": \"c\",\n    \"Ď\": \"D\",\n    \"ď\": \"d\",\n    \"Đ\": \"D\",\n    \"đ\": \"d\",\n    \"Ē\": \"E\",\n    \"ē\": \"e\",\n    \"Ĕ\": \"E\",\n    \"ĕ\": \"e\",\n    \"Ė\": \"E\",\n    \"ė\": \"e\",\n    \"Ę\": \"E\",\n    \"ę\": \"e\",\n    \"Ě\": \"E\",\n    \"ě\": \"e\",\n    \"Ĝ\": \"G\",\n    \"Ǵ\": \"G\",\n    \"ĝ\": \"g\",\n    \"ǵ\": \"g\",\n    \"Ğ\": \"G\",\n    \"ğ\": \"g\",\n    \"Ġ\": \"G\",\n    \"ġ\": \"g\",\n    \"Ģ\": \"G\",\n    \"ģ\": \"g\",\n    \"Ĥ\": \"H\",\n    \"ĥ\": \"h\",\n    \"Ħ\": \"H\",\n    \"ħ\": \"h\",\n    \"Ḫ\": \"H\",\n    \"ḫ\": \"h\",\n    \"Ĩ\": \"I\",\n    \"ĩ\": \"i\",\n    \"Ī\": \"I\",\n    \"ī\": \"i\",\n    \"Ĭ\": \"I\",\n    \"ĭ\": \"i\",\n    \"Į\": \"I\",\n    \"į\": \"i\",\n    \"İ\": \"I\",\n    \"ı\": \"i\",\n    \"Ĳ\": \"IJ\",\n    \"ĳ\": \"ij\",\n    \"Ĵ\": \"J\",\n    \"ĵ\": \"j\",\n    \"Ķ\": \"K\",\n    \"ķ\": \"k\",\n    \"Ḱ\": \"K\",\n    \"ḱ\": \"k\",\n    \"K̆\": \"K\",\n    \"k̆\": \"k\",\n    \"Ĺ\": \"L\",\n    \"ĺ\": \"l\",\n    \"Ļ\": \"L\",\n    \"ļ\": \"l\",\n    \"Ľ\": \"L\",\n    \"ľ\": \"l\",\n    \"Ŀ\": \"L\",\n    \"ŀ\": \"l\",\n    \"Ł\": \"l\",\n    \"ł\": \"l\",\n    \"Ḿ\": \"M\",\n    \"ḿ\": \"m\",\n    \"M̆\": \"M\",\n    \"m̆\": \"m\",\n    \"Ń\": \"N\",\n    \"ń\": \"n\",\n    \"Ņ\": \"N\",\n    \"ņ\": \"n\",\n    \"Ň\": \"N\",\n    \"ň\": \"n\",\n    \"ŉ\": \"n\",\n    \"N̆\": \"N\",\n    \"n̆\": \"n\",\n    \"Ō\": \"O\",\n    \"ō\": \"o\",\n    \"Ŏ\": \"O\",\n    \"ŏ\": \"o\",\n    \"Ő\": \"O\",\n    \"ő\": \"o\",\n    \"Œ\": \"OE\",\n    \"œ\": \"oe\",\n    \"P̆\": \"P\",\n    \"p̆\": \"p\",\n    \"Ŕ\": \"R\",\n    \"ŕ\": \"r\",\n    \"Ŗ\": \"R\",\n    \"ŗ\": \"r\",\n    \"Ř\": \"R\",\n    \"ř\": \"r\",\n    \"R̆\": \"R\",\n    \"r̆\": \"r\",\n    \"Ȓ\": \"R\",\n    \"ȓ\": \"r\",\n    \"Ś\": \"S\",\n    \"ś\": \"s\",\n    \"Ŝ\": \"S\",\n    \"ŝ\": \"s\",\n    \"Ş\": \"S\",\n    \"Ș\": \"S\",\n    \"ș\": \"s\",\n    \"ş\": \"s\",\n    \"Š\": \"S\",\n    \"š\": \"s\",\n    \"Ţ\": \"T\",\n    \"ţ\": \"t\",\n    \"ț\": \"t\",\n    \"Ț\": \"T\",\n    \"Ť\": \"T\",\n    \"ť\": \"t\",\n    \"Ŧ\": \"T\",\n    \"ŧ\": \"t\",\n    \"T̆\": \"T\",\n    \"t̆\": \"t\",\n    \"Ũ\": \"U\",\n    \"ũ\": \"u\",\n    \"Ū\": \"U\",\n    \"ū\": \"u\",\n    \"Ŭ\": \"U\",\n    \"ŭ\": \"u\",\n    \"Ů\": \"U\",\n    \"ů\": \"u\",\n    \"Ű\": \"U\",\n    \"ű\": \"u\",\n    \"Ų\": \"U\",\n    \"ų\": \"u\",\n    \"Ȗ\": \"U\",\n    \"ȗ\": \"u\",\n    \"V̆\": \"V\",\n    \"v̆\": \"v\",\n    \"Ŵ\": \"W\",\n    \"ŵ\": \"w\",\n    \"Ẃ\": \"W\",\n    \"ẃ\": \"w\",\n    \"X̆\": \"X\",\n    \"x̆\": \"x\",\n    \"Ŷ\": \"Y\",\n    \"ŷ\": \"y\",\n    \"Ÿ\": \"Y\",\n    \"Y̆\": \"Y\",\n    \"y̆\": \"y\",\n    \"Ź\": \"Z\",\n    \"ź\": \"z\",\n    \"Ż\": \"Z\",\n    \"ż\": \"z\",\n    \"Ž\": \"Z\",\n    \"ž\": \"z\",\n    \"ſ\": \"s\",\n    \"ƒ\": \"f\",\n    \"Ơ\": \"O\",\n    \"ơ\": \"o\",\n    \"Ư\": \"U\",\n    \"ư\": \"u\",\n    \"Ǎ\": \"A\",\n    \"ǎ\": \"a\",\n    \"Ǐ\": \"I\",\n    \"ǐ\": \"i\",\n    \"Ǒ\": \"O\",\n    \"ǒ\": \"o\",\n    \"Ǔ\": \"U\",\n    \"ǔ\": \"u\",\n    \"Ǖ\": \"U\",\n    \"ǖ\": \"u\",\n    \"Ǘ\": \"U\",\n    \"ǘ\": \"u\",\n    \"Ǚ\": \"U\",\n    \"ǚ\": \"u\",\n    \"Ǜ\": \"U\",\n    \"ǜ\": \"u\",\n    \"Ứ\": \"U\",\n    \"ứ\": \"u\",\n    \"Ṹ\": \"U\",\n    \"ṹ\": \"u\",\n    \"Ǻ\": \"A\",\n    \"ǻ\": \"a\",\n    \"Ǽ\": \"AE\",\n    \"ǽ\": \"ae\",\n    \"Ǿ\": \"O\",\n    \"ǿ\": \"o\",\n    \"Þ\": \"TH\",\n    \"þ\": \"th\",\n    \"Ṕ\": \"P\",\n    \"ṕ\": \"p\",\n    \"Ṥ\": \"S\",\n    \"ṥ\": \"s\",\n    \"X́\": \"X\",\n    \"x́\": \"x\",\n    \"Ѓ\": \"Г\",\n    \"ѓ\": \"г\",\n    \"Ќ\": \"К\",\n    \"ќ\": \"к\",\n    \"A̋\": \"A\",\n    \"a̋\": \"a\",\n    \"E̋\": \"E\",\n    \"e̋\": \"e\",\n    \"I̋\": \"I\",\n    \"i̋\": \"i\",\n    \"Ǹ\": \"N\",\n    \"ǹ\": \"n\",\n    \"Ồ\": \"O\",\n    \"ồ\": \"o\",\n    \"Ṑ\": \"O\",\n    \"ṑ\": \"o\",\n    \"Ừ\": \"U\",\n    \"ừ\": \"u\",\n    \"Ẁ\": \"W\",\n    \"ẁ\": \"w\",\n    \"Ỳ\": \"Y\",\n    \"ỳ\": \"y\",\n    \"Ȁ\": \"A\",\n    \"ȁ\": \"a\",\n    \"Ȅ\": \"E\",\n    \"ȅ\": \"e\",\n    \"Ȉ\": \"I\",\n    \"ȉ\": \"i\",\n    \"Ȍ\": \"O\",\n    \"ȍ\": \"o\",\n    \"Ȑ\": \"R\",\n    \"ȑ\": \"r\",\n    \"Ȕ\": \"U\",\n    \"ȕ\": \"u\",\n    \"B̌\": \"B\",\n    \"b̌\": \"b\",\n    \"Č̣\": \"C\",\n    \"č̣\": \"c\",\n    \"Ê̌\": \"E\",\n    \"ê̌\": \"e\",\n    \"F̌\": \"F\",\n    \"f̌\": \"f\",\n    \"Ǧ\": \"G\",\n    \"ǧ\": \"g\",\n    \"Ȟ\": \"H\",\n    \"ȟ\": \"h\",\n    \"J̌\": \"J\",\n    \"ǰ\": \"j\",\n    \"Ǩ\": \"K\",\n    \"ǩ\": \"k\",\n    \"M̌\": \"M\",\n    \"m̌\": \"m\",\n    \"P̌\": \"P\",\n    \"p̌\": \"p\",\n    \"Q̌\": \"Q\",\n    \"q̌\": \"q\",\n    \"Ř̩\": \"R\",\n    \"ř̩\": \"r\",\n    \"Ṧ\": \"S\",\n    \"ṧ\": \"s\",\n    \"V̌\": \"V\",\n    \"v̌\": \"v\",\n    \"W̌\": \"W\",\n    \"w̌\": \"w\",\n    \"X̌\": \"X\",\n    \"x̌\": \"x\",\n    \"Y̌\": \"Y\",\n    \"y̌\": \"y\",\n    \"A̧\": \"A\",\n    \"a̧\": \"a\",\n    \"B̧\": \"B\",\n    \"b̧\": \"b\",\n    \"Ḑ\": \"D\",\n    \"ḑ\": \"d\",\n    \"Ȩ\": \"E\",\n    \"ȩ\": \"e\",\n    \"Ɛ̧\": \"E\",\n    \"ɛ̧\": \"e\",\n    \"Ḩ\": \"H\",\n    \"ḩ\": \"h\",\n    \"I̧\": \"I\",\n    \"i̧\": \"i\",\n    \"Ɨ̧\": \"I\",\n    \"ɨ̧\": \"i\",\n    \"M̧\": \"M\",\n    \"m̧\": \"m\",\n    \"O̧\": \"O\",\n    \"o̧\": \"o\",\n    \"Q̧\": \"Q\",\n    \"q̧\": \"q\",\n    \"U̧\": \"U\",\n    \"u̧\": \"u\",\n    \"X̧\": \"X\",\n    \"x̧\": \"x\",\n    \"Z̧\": \"Z\",\n    \"z̧\": \"z\"\n  };\n  var chars = Object.keys(characterMap).join('|');\n  var allAccents = new RegExp(chars, 'g');\n  var firstAccent = new RegExp(chars, '');\n\n  var removeAccents = function (string) {\n    return string.replace(allAccents, function (match) {\n      return characterMap[match];\n    });\n  };\n\n  var hasAccents = function (string) {\n    return !!string.match(firstAccent);\n  };\n\n  var removeAccents_1 = removeAccents;\n  var has = hasAccents;\n  var remove = removeAccents;\n  removeAccents_1.has = has;\n  removeAccents_1.remove = remove;\n  var rankings = {\n    CASE_SENSITIVE_EQUAL: 9,\n    EQUAL: 8,\n    STARTS_WITH: 7,\n    WORD_STARTS_WITH: 6,\n    STRING_CASE: 5,\n    STRING_CASE_ACRONYM: 4,\n    CONTAINS: 3,\n    ACRONYM: 2,\n    MATCHES: 1,\n    NO_MATCH: 0\n  };\n  var caseRankings = {\n    CAMEL: 0.8,\n    PASCAL: 0.6,\n    KEBAB: 0.4,\n    SNAKE: 0.2,\n    NO_CASE: 0\n  };\n  matchSorter.rankings = rankings;\n  matchSorter.caseRankings = caseRankings;\n  /**\n   * Takes an array of items and a value and returns a new array with the items that match the given value\n   * @param {Array} items - the items to sort\n   * @param {String} value - the value to use for ranking\n   * @param {Object} options - Some options to configure the sorter\n   * @return {Array} - the new sorted array\n   */\n\n  function matchSorter(items, value, options) {\n    if (options === void 0) {\n      options = {};\n    } // not performing any search/sort if value(search term) is empty\n\n\n    if (!value) return items;\n    var _options = options,\n        keys = _options.keys,\n        _options$threshold = _options.threshold,\n        threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold;\n    var matchedItems = items.reduce(reduceItemsToRanked, []);\n    return matchedItems.sort(sortRankedItems).map(function (_ref) {\n      var item = _ref.item;\n      return item;\n    });\n\n    function reduceItemsToRanked(matches, item, index) {\n      var _getHighestRanking = getHighestRanking(item, keys, value, options),\n          rankedItem = _getHighestRanking.rankedItem,\n          rank = _getHighestRanking.rank,\n          keyIndex = _getHighestRanking.keyIndex,\n          _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n          keyThreshold = _getHighestRanking$ke === void 0 ? threshold : _getHighestRanking$ke;\n\n      if (rank >= keyThreshold) {\n        matches.push({\n          rankedItem: rankedItem,\n          item: item,\n          rank: rank,\n          index: index,\n          keyIndex: keyIndex\n        });\n      }\n\n      return matches;\n    }\n  }\n  /**\n   * Gets the highest ranking for value for the given item based on its values for the given keys\n   * @param {*} item - the item to rank\n   * @param {Array} keys - the keys to get values from the item for the ranking\n   * @param {String} value - the value to rank against\n   * @param {Object} options - options to control the ranking\n   * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n   */\n\n\n  function getHighestRanking(item, keys, value, options) {\n    if (!keys) {\n      return {\n        // ends up being duplicate of 'item' in matches but consistent\n        rankedItem: item,\n        rank: getMatchRanking(item, value, options),\n        keyIndex: -1,\n        keyThreshold: options.threshold\n      };\n    }\n\n    var valuesToRank = getAllValuesToRank(item, keys);\n    return valuesToRank.reduce(function (_ref2, _ref3, i) {\n      var rank = _ref2.rank,\n          rankedItem = _ref2.rankedItem,\n          keyIndex = _ref2.keyIndex,\n          keyThreshold = _ref2.keyThreshold;\n      var itemValue = _ref3.itemValue,\n          attributes = _ref3.attributes;\n      var newRank = getMatchRanking(itemValue, value, options);\n      var newRankedItem = rankedItem;\n      var minRanking = attributes.minRanking,\n          maxRanking = attributes.maxRanking,\n          threshold = attributes.threshold;\n\n      if (newRank < minRanking && newRank >= rankings.MATCHES) {\n        newRank = minRanking;\n      } else if (newRank > maxRanking) {\n        newRank = maxRanking;\n      }\n\n      if (newRank > rank) {\n        rank = newRank;\n        keyIndex = i;\n        keyThreshold = threshold;\n        newRankedItem = itemValue;\n      }\n\n      return {\n        rankedItem: newRankedItem,\n        rank: rank,\n        keyIndex: keyIndex,\n        keyThreshold: keyThreshold\n      };\n    }, {\n      rank: rankings.NO_MATCH,\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    });\n  }\n  /**\n   * Gives a rankings score based on how well the two strings match.\n   * @param {String} testString - the string to test against\n   * @param {String} stringToRank - the string to rank\n   * @param {Object} options - options for the match (like keepDiacritics for comparison)\n   * @returns {Number} the ranking for how well stringToRank matches testString\n   */\n\n\n  function getMatchRanking(testString, stringToRank, options) {\n    /* eslint complexity:[2, 12] */\n    testString = prepareValueForComparison(testString, options);\n    stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n    if (stringToRank.length > testString.length) {\n      return rankings.NO_MATCH;\n    } // case sensitive equals\n\n\n    if (testString === stringToRank) {\n      return rankings.CASE_SENSITIVE_EQUAL;\n    }\n\n    var caseRank = getCaseRanking(testString);\n    var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n    var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank); // Lower casing before further comparison\n\n    testString = testString.toLowerCase();\n    stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n    if (testString === stringToRank) {\n      return rankings.EQUAL + caseRank;\n    } // starts with\n\n\n    if (testString.indexOf(stringToRank) === 0) {\n      return rankings.STARTS_WITH + caseRank;\n    } // word starts with\n\n\n    if (testString.indexOf(\" \" + stringToRank) !== -1) {\n      return rankings.WORD_STARTS_WITH + caseRank;\n    } // is a part inside a cased string\n\n\n    if (isPartial) {\n      return rankings.STRING_CASE + caseRank;\n    } // is acronym for a cased string\n\n\n    if (caseRank > 0 && isCasedAcronym) {\n      return rankings.STRING_CASE_ACRONYM + caseRank;\n    } // contains\n\n\n    if (testString.indexOf(stringToRank) !== -1) {\n      return rankings.CONTAINS + caseRank;\n    } else if (stringToRank.length === 1) {\n      // If the only character in the given stringToRank\n      //   isn't even contained in the testString, then\n      //   it's definitely not a match.\n      return rankings.NO_MATCH;\n    } // acronym\n\n\n    if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n      return rankings.ACRONYM + caseRank;\n    } // will return a number between rankings.MATCHES and\n    // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n    return getClosenessRanking(testString, stringToRank);\n  }\n  /**\n   * Generates an acronym for a string.\n   *\n   * @param {String} string the string for which to produce the acronym\n   * @returns {String} the acronym\n   */\n\n\n  function getAcronym(string) {\n    var acronym = '';\n    var wordsInString = string.split(' ');\n    wordsInString.forEach(function (wordInString) {\n      var splitByHyphenWords = wordInString.split('-');\n      splitByHyphenWords.forEach(function (splitByHyphenWord) {\n        acronym += splitByHyphenWord.substr(0, 1);\n      });\n    });\n    return acronym;\n  }\n  /**\n   * Returns a score base on the case of the testString\n   * @param {String} testString - the string to test against\n   * @returns {Number} the number of the ranking,\n   * based on the case between 0 and 1 for how the testString matches the case\n   */\n\n\n  function getCaseRanking(testString) {\n    var containsUpperCase = testString.toLowerCase() !== testString;\n    var containsDash = testString.indexOf('-') >= 0;\n    var containsUnderscore = testString.indexOf('_') >= 0;\n\n    if (!containsUpperCase && !containsUnderscore && containsDash) {\n      return caseRankings.KEBAB;\n    }\n\n    if (!containsUpperCase && containsUnderscore && !containsDash) {\n      return caseRankings.SNAKE;\n    }\n\n    if (containsUpperCase && !containsDash && !containsUnderscore) {\n      var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n\n      if (startsWithUpperCase) {\n        return caseRankings.PASCAL;\n      }\n\n      return caseRankings.CAMEL;\n    }\n\n    return caseRankings.NO_CASE;\n  }\n  /**\n   * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n   * @example\n   * // returns true\n   * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n   * @example\n   * // returns false\n   * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n   * @param {String} testString - the string to test against\n   * @param {String} stringToRank - the string to rank\n   * @param {Number} caseRanking - the ranking score based on case of testString\n   * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n   */\n\n\n  function isPartialOfCase(testString, stringToRank, caseRanking) {\n    var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n    switch (caseRanking) {\n      case caseRankings.SNAKE:\n        return testString[testIndex - 1] === '_';\n\n      case caseRankings.KEBAB:\n        return testString[testIndex - 1] === '-';\n\n      case caseRankings.PASCAL:\n      case caseRankings.CAMEL:\n        return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n\n      default:\n        return false;\n    }\n  }\n  /**\n   * Check if stringToRank is an acronym for a partial case\n   * @example\n   * // returns true\n   * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n   * @param {String} testString - the string to test against\n   * @param {String} stringToRank - the acronym to test\n   * @param {Number} caseRank - the ranking of the case\n   * @returns {Boolean} whether the stringToRank is an acronym for the testString\n   */\n\n\n  function isCaseAcronym(testString, stringToRank, caseRank) {\n    var splitValue = null;\n\n    switch (caseRank) {\n      case caseRankings.SNAKE:\n        splitValue = '_';\n        break;\n\n      case caseRankings.KEBAB:\n        splitValue = '-';\n        break;\n\n      case caseRankings.PASCAL:\n      case caseRankings.CAMEL:\n        splitValue = /(?=[A-Z])/;\n        break;\n\n      default:\n        splitValue = null;\n    }\n\n    var splitTestString = testString.split(splitValue);\n    return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n      var splitItem = splitTestString[charIndex];\n      return correct && splitItem && splitItem[0].toLowerCase() === char;\n    }, true);\n  }\n  /**\n   * Returns a score based on how spread apart the\n   * characters from the stringToRank are within the testString.\n   * A number close to rankings.MATCHES represents a loose match. A number close\n   * to rankings.MATCHES + 1 represents a tighter match.\n   * @param {String} testString - the string to test against\n   * @param {String} stringToRank - the string to rank\n   * @returns {Number} the number between rankings.MATCHES and\n   * rankings.MATCHES + 1 for how well stringToRank matches testString\n   */\n\n\n  function getClosenessRanking(testString, stringToRank) {\n    var matchingInOrderCharCount = 0;\n    var charNumber = 0;\n\n    function findMatchingCharacter(matchChar, string, index) {\n      for (var j = index; j < string.length; j++) {\n        var stringChar = string[j];\n\n        if (stringChar === matchChar) {\n          matchingInOrderCharCount += 1;\n          return j + 1;\n        }\n      }\n\n      return -1;\n    }\n\n    function getRanking(spread) {\n      var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n      var ranking = rankings.MATCHES + inOrderPercentage * (1 / spread);\n      return ranking;\n    }\n\n    var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n    if (firstIndex < 0) {\n      return rankings.NO_MATCH;\n    }\n\n    charNumber = firstIndex;\n\n    for (var i = 1; i < stringToRank.length; i++) {\n      var matchChar = stringToRank[i];\n      charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n      var found = charNumber > -1;\n\n      if (!found) {\n        return rankings.NO_MATCH;\n      }\n    }\n\n    var spread = charNumber - firstIndex;\n    return getRanking(spread);\n  }\n  /**\n   * Sorts items that have a rank, index, and keyIndex\n   * @param {Object} a - the first item to sort\n   * @param {Object} b - the second item to sort\n   * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n   */\n\n\n  function sortRankedItems(a, b) {\n    var aFirst = -1;\n    var bFirst = 1;\n    var aRankedItem = a.rankedItem,\n        aRank = a.rank,\n        aKeyIndex = a.keyIndex;\n    var bRankedItem = b.rankedItem,\n        bRank = b.rank,\n        bKeyIndex = b.keyIndex;\n\n    if (aRank === bRank) {\n      if (aKeyIndex === bKeyIndex) {\n        // localeCompare returns 0 if both values are equal,\n        // so we rely on JS engines stably sorting the results\n        // (de facto, all modern engine do this).\n        return String(aRankedItem).localeCompare(bRankedItem);\n      } else {\n        return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n      }\n    } else {\n      return aRank > bRank ? aFirst : bFirst;\n    }\n  }\n  /**\n   * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n   * @param {String} value - the value to clean\n   * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n   * @return {String} the prepared value\n   */\n\n\n  function prepareValueForComparison(value, _ref4) {\n    var keepDiacritics = _ref4.keepDiacritics;\n    value = \"\" + value; // toString\n\n    if (!keepDiacritics) {\n      value = removeAccents_1(value);\n    }\n\n    return value;\n  }\n  /**\n   * Gets value for key in item at arbitrarily nested keypath\n   * @param {Object} item - the item\n   * @param {Object|Function} key - the potentially nested keypath or property callback\n   * @return {Array} - an array containing the value(s) at the nested keypath\n   */\n\n\n  function getItemValues(item, key) {\n    if (typeof key === 'object') {\n      key = key.key;\n    }\n\n    var value;\n\n    if (typeof key === 'function') {\n      value = key(item); // eslint-disable-next-line no-negated-condition\n    } else if (key.indexOf('.') !== -1) {\n      // handle nested keys\n      value = key.split('.').reduce(function (itemObj, nestedKey) {\n        return itemObj ? itemObj[nestedKey] : null;\n      }, item);\n    } else {\n      value = item[key];\n    } // concat because `value` can be a string or an array\n    // eslint-disable-next-line\n\n\n    return value != null ? [].concat(value) : null;\n  }\n  /**\n   * Gets all the values for the given keys in the given item and returns an array of those values\n   * @param {Object} item - the item from which the values will be retrieved\n   * @param {Array} keys - the keys to use to retrieve the values\n   * @return {Array} objects with {itemValue, attributes}\n   */\n\n\n  function getAllValuesToRank(item, keys) {\n    return keys.reduce(function (allVals, key) {\n      var values = getItemValues(item, key);\n\n      if (values) {\n        values.forEach(function (itemValue) {\n          allVals.push({\n            itemValue: itemValue,\n            attributes: getKeyAttributes(key)\n          });\n        });\n      }\n\n      return allVals;\n    }, []);\n  }\n  /**\n   * Gets all the attributes for the given key\n   * @param {Object|String} key - the key from which the attributes will be retrieved\n   * @return {Object} object containing the key's attributes\n   */\n\n\n  function getKeyAttributes(key) {\n    if (typeof key === 'string') {\n      key = {\n        key: key\n      };\n    }\n\n    return _extends$1({\n      maxRanking: Infinity,\n      minRanking: -Infinity\n    }, key);\n  }\n\n  var getItem = function getItem(key) {\n    try {\n      return JSON.parse(localStorage.getItem(key));\n    } catch (_unused) {\n      return undefined;\n    }\n  };\n\n  function useLocalStorage(key, defaultValue) {\n    var _React$useState = React.useState(function () {\n      var val = getItem(key);\n\n      if (typeof val === 'undefined' || val === null) {\n        return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n      }\n\n      return val;\n    }),\n        value = _React$useState[0],\n        setValue = _React$useState[1];\n\n    var setter = React.useCallback(function (updater) {\n      setValue(function (old) {\n        var newVal = updater;\n\n        if (typeof updater == 'function') {\n          newVal = updater(old);\n        }\n\n        try {\n          localStorage.setItem(key, JSON.stringify(newVal));\n        } catch (_unused2) {}\n\n        return newVal;\n      });\n    }, [key]);\n    return [value, setter];\n  }\n\n  var name = \"react-query-devtools\";\n  var version = \"1.1.5\";\n  var description = \"Devtools for React Query\";\n  var author = \"tannerlinsley\";\n  var license = \"MIT\";\n  var repository = \"tannerlinsley/react-query-devtools\";\n  var main = \"index.js\";\n  var sideEffects = false;\n  var scripts = {\n    test: \"is-ci \\\"test:ci\\\" \\\"test:dev\\\"\",\n    \"test:dev\": \"jest --watch\",\n    \"test:ci\": \"jest\",\n    \"test:coverage\": \"yarn test:ci; open coverage/lcov-report/index.html\",\n    build: \"NODE_ENV=production rollup -c\",\n    \"now-build\": \"yarn && cd www && yarn && yarn build\",\n    start: \"rollup -c -w\",\n    prepare: \"yarn build\",\n    release: \"yarn publish\",\n    releaseNext: \"yarn publish --tag next\",\n    format: \"prettier {src,src/**,example/src,example/src/**}/*.{md,js,jsx,tsx} --write\",\n    doctoc: \"npx doctoc --maxlevel 2 README.md\"\n  };\n  var files = [\"dist\"];\n  var dependencies = {\n    \"match-sorter\": \"^4.1.0\"\n  };\n  var peerDependencies = {\n    react: \"^16.6.3\",\n    \"react-query\": \"^1.0.0\"\n  };\n  var devDependencies = {\n    \"@babel/core\": \"^7.8.4\",\n    \"@babel/preset-env\": \"^7.8.4\",\n    \"@babel/preset-react\": \"^7.8.3\",\n    \"@rollup/plugin-json\": \"^4.0.2\",\n    \"@rollup/plugin-replace\": \"^2.3.1\",\n    \"@svgr/rollup\": \"^4.3.0\",\n    \"@testing-library/react\": \"^9.4.0\",\n    \"babel-core\": \"7.0.0-bridge.0\",\n    \"babel-eslint\": \"9.x\",\n    \"babel-jest\": \"^24.9.0\",\n    \"babel-plugin-transform-async-to-promises\": \"^0.8.15\",\n    \"cross-env\": \"^5.1.4\",\n    eslint: \"5.x\",\n    \"eslint-config-prettier\": \"^4.3.0\",\n    \"eslint-config-react-app\": \"^4.0.1\",\n    \"eslint-config-standard\": \"^12.0.0\",\n    \"eslint-config-standard-react\": \"^7.0.2\",\n    \"eslint-plugin-flowtype\": \"2.x\",\n    \"eslint-plugin-import\": \"2.x\",\n    \"eslint-plugin-jsx-a11y\": \"6.x\",\n    \"eslint-plugin-node\": \"^9.1.0\",\n    \"eslint-plugin-prettier\": \"^3.1.2\",\n    \"eslint-plugin-promise\": \"^4.1.1\",\n    \"eslint-plugin-react\": \"7.18.3\",\n    \"eslint-plugin-react-hooks\": \"1.5.0\",\n    \"eslint-plugin-standard\": \"^4.0.0\",\n    \"is-ci-cli\": \"^2.0.0\",\n    jest: \"^24.9.0\",\n    prettier: \"^1.19.1\",\n    react: \"^16.12.0\",\n    \"react-dom\": \"^16.12.0\",\n    rollup: \"^1.31.1\",\n    \"rollup-plugin-babel\": \"^4.3.2\",\n    \"rollup-plugin-commonjs\": \"^10.1.0\",\n    \"rollup-plugin-jscc\": \"^1.0.0\",\n    \"rollup-plugin-node-resolve\": \"^5.2.0\",\n    \"rollup-plugin-peer-deps-external\": \"^2.2.2\",\n    \"rollup-plugin-prettier\": \"^0.6.0\",\n    \"rollup-plugin-size\": \"^0.2.2\",\n    \"rollup-plugin-size-snapshot\": \"^0.10.0\",\n    \"rollup-plugin-terser\": \"^5.2.0\"\n  };\n  var pkg = {\n    name: name,\n    version: version,\n    description: description,\n    author: author,\n    license: license,\n    repository: repository,\n    main: main,\n    sideEffects: sideEffects,\n    scripts: scripts,\n    files: files,\n    dependencies: dependencies,\n    peerDependencies: peerDependencies,\n    devDependencies: devDependencies\n  };\n  var ThemeContext = React.createContext();\n\n  function ThemeProvider(_ref) {\n    var theme = _ref.theme,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"theme\"]);\n\n    return React.createElement(ThemeContext.Provider, _extends({\n      value: theme\n    }, rest));\n  }\n\n  function useTheme() {\n    return React.useContext(ThemeContext);\n  }\n\n  function useMediaQuery(query) {\n    // Keep track of the preference in state, start with the current match\n    var _React$useState = React.useState(function () {\n      return window.matchMedia && window.matchMedia(query).matches;\n    }),\n        isMatch = _React$useState[0],\n        setIsMatch = _React$useState[1]; // Watch for changes\n\n\n    React.useEffect(function () {\n      if (!window.matchMedia) {\n        return;\n      } // Create a matcher\n\n\n      var matcher = window.matchMedia(query); // Create our handler\n\n      var onChange = function onChange(_ref) {\n        var matches = _ref.matches;\n        return setIsMatch(matches);\n      }; // Listen for changes\n\n\n      matcher.addListener(onChange);\n      return function () {\n        // Stop listening for changes\n        matcher.removeListener(onChange);\n      };\n    }, [isMatch, query, setIsMatch]);\n    return isMatch;\n  }\n\n  function getQueryStatusColor(query, theme) {\n    return query.state.isFetching ? theme.active : !query.instances.length ? theme.gray : query.state.isStale ? theme.warning : theme.success;\n  }\n\n  function getQueryStatusLabel(query) {\n    return query.state.isFetching ? 'fetching' : !query.instances.length ? 'inactive' : query.state.isStale ? 'stale' : 'fresh';\n  }\n\n  function styled(type, newStyles, queries) {\n    if (queries === void 0) {\n      queries = {};\n    }\n\n    return React.forwardRef(function (_ref, ref) {\n      var style = _ref.style,\n          rest = _objectWithoutPropertiesLoose(_ref, [\"style\"]);\n\n      var theme = useTheme();\n      var mediaStyles = Object.entries(queries).reduce(function (current, _ref2) {\n        var key = _ref2[0],\n            value = _ref2[1];\n        return useMediaQuery(key) ? _extends({}, current, {}, typeof value === 'function' ? value(rest, theme) : value) : current;\n      }, {});\n      return React.createElement(type, _extends({}, rest, {\n        style: _extends({}, typeof newStyles === 'function' ? newStyles(rest, theme) : newStyles, {}, style, {}, mediaStyles),\n        ref: ref\n      }));\n    });\n  }\n\n  var Panel = styled('div', function (props, theme) {\n    return {\n      fontSize: '1rem',\n      display: 'flex',\n      backgroundColor: theme.background,\n      color: theme.foreground\n    };\n  }, {\n    '(max-width: 600px)': {\n      fontSize: '.9rem',\n      flexDirection: 'column'\n    }\n  });\n  var Button = styled('button', function (props, theme) {\n    return {\n      appearance: 'none',\n      fontSize: '.9rem',\n      fontWeight: 'bold',\n      background: theme.gray,\n      border: '0',\n      borderRadius: '.3rem',\n      color: 'white',\n      padding: '.5rem',\n      opacity: props.disabled ? '.5' : undefined,\n      cursor: 'pointer'\n    };\n  });\n  var QueryKeys = styled('span', {\n    display: 'inline-block',\n    fontSize: '0.9rem'\n  });\n  var QueryKey = styled('span', {\n    display: 'inline-flex',\n    alignItems: 'center',\n    padding: '.2rem .4rem',\n    fontWeight: 'bold',\n    textShadow: '0 0 10px black',\n    borderRadius: '.2rem'\n  });\n  var Code = styled('code', {\n    fontSize: '.9rem'\n  });\n  var Input = styled('input', {\n    border: 0,\n    borderRadius: '.2rem',\n    fontSize: '.9rem',\n    padding: '.3rem .4rem'\n  });\n  var Select = styled('select', {\n    display: \"inline-block\",\n    fontSize: \".9rem\",\n    fontFamily: \"sans-serif\",\n    fontWeight: 'normal',\n    lineHeight: \"1.3\",\n    padding: \".3rem 1.5rem .3rem .5rem\",\n    height: 'auto',\n    border: 0,\n    borderRadius: \".2rem\",\n    appearance: \"none\",\n    WebkitAppearance: 'none',\n    backgroundColor: \"#fff\",\n    backgroundImage: \"url(\\\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23444444'><polygon points='0,25 100,25 50,75'/></svg>\\\")\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"right .55rem center\",\n    backgroundSize: \".65em auto, 100%\"\n  });\n  var Entry = styled('div', {\n    fontFamily: 'Menlo, monospace',\n    fontSize: '0.9rem',\n    lineHeight: '1.7',\n    outline: 'none'\n  });\n  var Label = styled('span', {\n    cursor: 'pointer',\n    color: 'white'\n  });\n  var Value = styled('span', function (props, theme) {\n    return {\n      color: theme.danger\n    };\n  });\n  var SubEntries = styled('div', {\n    marginLeft: '.1rem',\n    paddingLeft: '1rem',\n    borderLeft: '2px solid rgba(0,0,0,.15)'\n  });\n  var Info = styled('span', {\n    color: 'grey',\n    fontSize: '.7rem'\n  });\n\n  var Expander = function Expander(_ref) {\n    var expanded = _ref.expanded,\n        _ref$style = _ref.style,\n        style = _ref$style === void 0 ? {} : _ref$style,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"expanded\", \"style\"]);\n\n    return React.createElement(\"span\", {\n      style: _extends({\n        display: 'inline-block',\n        transition: 'all .1s ease',\n        transform: \"rotate(\" + (expanded ? 90 : 0) + \"deg) \" + (style.transform || '')\n      }, style)\n    }, \"\\u25B6\");\n  };\n\n  var DefaultRenderer = function DefaultRenderer(_ref2) {\n    var handleEntry = _ref2.handleEntry,\n        label = _ref2.label,\n        value = _ref2.value,\n        subEntries = _ref2.subEntries,\n        subEntryPages = _ref2.subEntryPages,\n        expanded = _ref2.expanded,\n        toggle = _ref2.toggle,\n        pageSize = _ref2.pageSize;\n\n    var _React$useState = React.useState([]),\n        expandedPages = _React$useState[0],\n        setExpandedPages = _React$useState[1];\n\n    return React.createElement(Entry, {\n      key: label\n    }, (subEntryPages == null ? void 0 : subEntryPages.length) ? React.createElement(React.Fragment, null, React.createElement(Label, {\n      onClick: function onClick() {\n        return toggle();\n      }\n    }, React.createElement(Expander, {\n      expanded: expanded\n    }), \" \", label, ' ', React.createElement(Info, null, subEntries.length, \" items\")), expanded ? subEntryPages.length === 1 ? React.createElement(SubEntries, null, subEntries.map(function (entry) {\n      return handleEntry(entry);\n    })) : React.createElement(SubEntries, null, subEntryPages.map(function (entries, index) {\n      return React.createElement(\"div\", {\n        key: index\n      }, React.createElement(Entry, null, React.createElement(Label, {\n        onClick: function onClick() {\n          return setExpandedPages(function (old) {\n            return old.includes(index) ? old.filter(function (d) {\n              return d !== index;\n            }) : [].concat(old, [index]);\n          });\n        }\n      }, React.createElement(Expander, {\n        expanded: expanded\n      }), \" [\", index * pageSize, \" ...\", ' ', index * pageSize + pageSize - 1, \"]\"), expandedPages.includes(index) ? React.createElement(SubEntries, null, entries.map(function (entry) {\n        return handleEntry(entry);\n      })) : null));\n    })) : null) : React.createElement(React.Fragment, null, React.createElement(Label, null, label, \":\"), \" \", React.createElement(Value, null, JSON.stringify(value))));\n  };\n\n  function Explorer(_ref3) {\n    var value = _ref3.value,\n        defaultExpanded = _ref3.defaultExpanded,\n        _ref3$renderer = _ref3.renderer,\n        renderer = _ref3$renderer === void 0 ? DefaultRenderer : _ref3$renderer,\n        _ref3$pageSize = _ref3.pageSize,\n        pageSize = _ref3$pageSize === void 0 ? 100 : _ref3$pageSize,\n        rest = _objectWithoutPropertiesLoose(_ref3, [\"value\", \"defaultExpanded\", \"renderer\", \"pageSize\"]);\n\n    var _React$useState2 = React.useState(defaultExpanded),\n        expanded = _React$useState2[0],\n        setExpanded = _React$useState2[1];\n\n    var toggle = function toggle(set) {\n      setExpanded(function (old) {\n        return typeof set !== 'undefined' ? set : !old;\n      });\n    };\n\n    var path = [];\n    var depth = 0;\n    var type = typeof value;\n    var subEntries;\n    var subEntryPages = [];\n\n    var makeProperty = function makeProperty(sub) {\n      var _ref4;\n\n      var newPath = path.concat(sub.label);\n      var subDefaultExpanded = defaultExpanded === true ? (_ref4 = {}, _ref4[sub.label] = true, _ref4) : defaultExpanded == null ? void 0 : defaultExpanded[sub.label];\n      return _extends({}, sub, {\n        path: newPath,\n        depth: depth + 1,\n        defaultExpanded: subDefaultExpanded\n      });\n    };\n\n    if (Array.isArray(value)) {\n      type = 'array';\n      subEntries = value.map(function (d, i) {\n        return makeProperty({\n          label: i,\n          value: d\n        });\n      });\n    } else if (typeof value === 'object' && value !== null) {\n      type = 'object';\n      subEntries = Object.entries(value).map(function (_ref5) {\n        var label = _ref5[0],\n            value = _ref5[1];\n        return makeProperty({\n          label: label,\n          value: value\n        });\n      });\n    }\n\n    if (subEntries) {\n      var i = 0;\n\n      while (i < subEntries.length) {\n        subEntryPages.push(subEntries.slice(i, i + pageSize));\n        i = i + pageSize;\n      }\n    }\n\n    return renderer(_extends({\n      handleEntry: function handleEntry(entry) {\n        return React.createElement(Explorer, _extends({\n          key: entry.label,\n          renderer: renderer\n        }, rest, entry));\n      },\n      type: type,\n      subEntries: subEntries,\n      subEntryPages: subEntryPages,\n      depth: depth,\n      value: value,\n      path: path,\n      expanded: expanded,\n      toggle: toggle,\n      pageSize: pageSize\n    }, rest));\n  }\n\n  var isServer = typeof window === 'undefined';\n  var theme = {\n    background: '#0b1521',\n    backgroundAlt: '#132337',\n    foreground: 'white',\n    gray: '#3f4e60',\n    grayAlt: '#222e3e',\n    success: '#00ab52',\n    danger: '#ff0085',\n    active: '#006bff',\n    warning: '#ffb200'\n  };\n\n  function ReactQueryDevtools(_ref) {\n    var initialIsOpen = _ref.initialIsOpen,\n        _ref$panelProps = _ref.panelProps,\n        panelProps = _ref$panelProps === void 0 ? {} : _ref$panelProps,\n        _ref$closeButtonProps = _ref.closeButtonProps,\n        closeButtonProps = _ref$closeButtonProps === void 0 ? {} : _ref$closeButtonProps,\n        _ref$toggleButtonProp = _ref.toggleButtonProps,\n        toggleButtonProps = _ref$toggleButtonProp === void 0 ? {} : _ref$toggleButtonProp;\n    var rootRef = React.useRef();\n    var panelRef = React.useRef();\n\n    var _useLocalStorage = useLocalStorage('reactQueryDevtoolsOpen', initialIsOpen),\n        isOpen = _useLocalStorage[0],\n        setIsOpen = _useLocalStorage[1];\n\n    var _React$useState = React.useState(false),\n        isResolvedOpen = _React$useState[0],\n        setIsResolvedOpen = _React$useState[1];\n\n    React.useEffect(function () {\n      setIsResolvedOpen(isOpen);\n    }, [isOpen, isResolvedOpen]);\n    React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n      if (isResolvedOpen) {\n        var _rootRef$current;\n\n        var previousValue = (_rootRef$current = rootRef.current) == null ? void 0 : _rootRef$current.parentElement.style.paddingBottom;\n\n        var run = function run() {\n          var _panelRef$current;\n\n          var containerHeight = (_panelRef$current = panelRef.current) == null ? void 0 : _panelRef$current.getBoundingClientRect().height;\n          rootRef.current.parentElement.style.paddingBottom = containerHeight + \"px\";\n        };\n\n        run();\n        window.addEventListener('resize', run);\n        return function () {\n          window.removeEventListener('resize', run);\n          rootRef.current.parentElement.style.paddingBottom = previousValue;\n        };\n      }\n    }, [isResolvedOpen]);\n\n    var _panelProps$style = panelProps.style,\n        panelStyle = _panelProps$style === void 0 ? {} : _panelProps$style,\n        otherPanelProps = _objectWithoutPropertiesLoose(panelProps, [\"style\"]);\n\n    var _closeButtonProps$sty = closeButtonProps.style,\n        closeButtonStyle = _closeButtonProps$sty === void 0 ? {} : _closeButtonProps$sty,\n        onCloseClick = closeButtonProps.onClick,\n        otherCloseButtonProps = _objectWithoutPropertiesLoose(closeButtonProps, [\"style\", \"onClick\"]);\n\n    var _toggleButtonProps$st = toggleButtonProps.style,\n        toggleButtonStyle = _toggleButtonProps$st === void 0 ? {} : _toggleButtonProps$st,\n        onToggleClick = toggleButtonProps.onClick,\n        otherToggleButtonProps = _objectWithoutPropertiesLoose(toggleButtonProps, [\"style\", \"onClick\"]);\n\n    return React.createElement(\"div\", {\n      ref: rootRef,\n      className: \"ReactQueryDevtools\"\n    }, isResolvedOpen ? React.createElement(ThemeProvider, {\n      theme: theme\n    }, React.createElement(ReactQueryDevtoolsPanel, _extends({\n      ref: panelRef\n    }, otherPanelProps, {\n      style: _extends({\n        position: 'fixed',\n        bottom: '0',\n        right: '0',\n        zIndex: '99999',\n        width: '100%',\n        height: '500px',\n        maxHeight: '50%',\n        boxShadow: '0 0 20px rgba(0,0,0,.3)',\n        borderTop: \"1px solid \" + theme.gray\n      }, panelStyle)\n    })), React.createElement(Button, _extends({}, otherCloseButtonProps, {\n      onClick: function onClick() {\n        setIsOpen(false);\n        onCloseClick && onCloseClick();\n      },\n      style: _extends({\n        position: 'fixed',\n        bottom: '0',\n        right: '0',\n        zIndex: '99999',\n        margin: '.5rem'\n      }, closeButtonStyle)\n    }), \"Close\")) : React.createElement(\"div\", _extends({}, otherToggleButtonProps, {\n      onClick: function onClick() {\n        setIsOpen(true);\n        onToggleClick && onToggleClick();\n      },\n      style: _extends({\n        position: 'fixed',\n        bottom: '0',\n        right: '0',\n        zIndex: '99999',\n        display: 'inline-block',\n        fontSize: '1.5rem',\n        margin: '.5rem',\n        cursor: 'pointer',\n        textShadow: 'rgba(0,0,0,0.4) 0px 5px 10px'\n      }, toggleButtonStyle)\n    }), React.createElement(\"span\", null, \"\\uD83C\\uDF9B\")));\n  }\n\n  var getStatusRank = function getStatusRank(q) {\n    return q.state.isFetching ? 0 : !q.instances.length ? 3 : q.state.isStale ? 2 : 1;\n  };\n\n  var sortFns = {\n    'Status > Last Updated': function StatusLastUpdated(a, b) {\n      return getStatusRank(a) === getStatusRank(b) ? sortFns['Last Updated'](a, b) : getStatusRank(a) > getStatusRank(b) ? 1 : -1;\n    },\n    'Query Hash': function QueryHash(a, b) {\n      return a.queryHash > b.queryHash ? 1 : -1;\n    },\n    'Last Updated': function LastUpdated(a, b) {\n      return a.state.updatedAt < b.state.updatedAt ? 1 : -1;\n    }\n  };\n  var ReactQueryDevtoolsPanel = React.forwardRef(function ReactQueryDevtoolsPanel(props, ref) {\n    var _useLocalStorage2 = useLocalStorage('reactQueryDevtoolsSortFn', Object.keys(sortFns)[0]),\n        sort = _useLocalStorage2[0],\n        setSort = _useLocalStorage2[1];\n\n    var _useLocalStorage3 = useLocalStorage('reactQueryDevtoolsFilter', ''),\n        filter = _useLocalStorage3[0],\n        setFilter = _useLocalStorage3[1];\n\n    var _useLocalStorage4 = useLocalStorage('reactQueryDevtoolsSortDesc', false),\n        sortDesc = _useLocalStorage4[0],\n        setSortDesc = _useLocalStorage4[1];\n\n    var sortFn = React.useMemo(function () {\n      return sortFns[sort];\n    }, [sort]);\n    React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n      if (!sortFn) {\n        setSort(Object.keys(sortFns)[0]);\n      }\n    }, [setSort, sortFn]);\n\n    var _React$useState2 = React.useState(Object.values(reactQuery.queryCache.queries)),\n        unsortedQueries = _React$useState2[0],\n        setUnsortedQueries = _React$useState2[1];\n\n    var _React$useState3 = React.useState(null),\n        activeQueryHash = _React$useState3[0],\n        setActiveQueryHash = _React$useState3[1];\n\n    var queries = React.useMemo(function () {\n      var sorted = [].concat(unsortedQueries).sort(sortFn);\n\n      if (sortDesc) {\n        sorted.reverse();\n      }\n\n      return matchSorter(sorted, filter, {\n        keys: ['queryHash']\n      });\n    }, [sortDesc, sortFn, unsortedQueries, filter]);\n\n    var _React$useMemo = React.useMemo(function () {\n      var activeQuery = queries.find(function (query) {\n        return query.queryHash === activeQueryHash;\n      });\n      return [activeQuery, activeQuery ? JSON.parse(JSON.stringify(activeQuery)) : null];\n    }, [activeQueryHash, queries]),\n        activeQuery = _React$useMemo[0],\n        activeQueryJson = _React$useMemo[1];\n\n    var hasFresh = queries.filter(function (q) {\n      return getQueryStatusLabel(q) === 'fresh';\n    }).length;\n    var hasFetching = queries.filter(function (q) {\n      return getQueryStatusLabel(q) === 'fetching';\n    }).length;\n    var hasStale = queries.filter(function (q) {\n      return getQueryStatusLabel(q) === 'stale';\n    }).length;\n    var hasInactive = queries.filter(function (q) {\n      return getQueryStatusLabel(q) === 'inactive';\n    }).length;\n    React.useEffect(function () {\n      return reactQuery.queryCache.subscribe(function (queryCache) {\n        setUnsortedQueries(Object.values(queryCache.queries));\n      });\n    }, [sort, sortFn, sortDesc]);\n    React.useEffect(function () {\n      if (activeQueryHash && !activeQuery) {\n        setActiveQueryHash(null);\n      }\n    }, [activeQuery, activeQueryHash]);\n    return React.createElement(ThemeProvider, {\n      theme: theme\n    }, React.createElement(Panel, _extends({\n      ref: ref,\n      className: \"ReactQueryDevtoolsPanel\"\n    }, props), React.createElement(\"div\", {\n      style: {\n        flex: '1 1 50%',\n        minHeight: '33%',\n        overflow: 'auto',\n        borderRight: \"1px solid \" + theme.grayAlt,\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '.5rem',\n        background: theme.backgroundAlt,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      }\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: '1.2rem',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: '.5rem',\n        opacity: 0.3\n      }\n    }, \"React Query Devtools \", React.createElement(\"small\", null, \"v\", pkg.version)), React.createElement(\"div\", {\n      style: {\n        fontWeight: 'bold'\n      }\n    }, \"Queries (\", queries.length, \")\")), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    }, React.createElement(QueryKeys, {\n      style: {\n        marginBottom: '.5rem'\n      }\n    }, React.createElement(QueryKey, {\n      style: {\n        background: theme.success,\n        opacity: hasFresh ? 1 : 0.3\n      }\n    }, \"fresh \", React.createElement(Code, null, \"(\", hasFresh, \")\")), ' ', React.createElement(QueryKey, {\n      style: {\n        background: theme.active,\n        opacity: hasFetching ? 1 : 0.3\n      }\n    }, \"fetching \", React.createElement(Code, null, \"(\", hasFetching, \")\")), ' ', React.createElement(QueryKey, {\n      style: {\n        background: theme.warning,\n        color: 'black',\n        textShadow: '0',\n        opacity: hasStale ? 1 : 0.3\n      }\n    }, \"stale \", React.createElement(Code, null, \"(\", hasStale, \")\")), ' ', React.createElement(QueryKey, {\n      style: {\n        background: theme.gray,\n        opacity: hasInactive ? 1 : 0.3\n      }\n    }, \"inactive \", React.createElement(Code, null, \"(\", hasInactive, \")\"))), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      }\n    }, React.createElement(Input, {\n      placeholder: \"Filter\",\n      value: filter,\n      onChange: function onChange(e) {\n        return setFilter(e.target.value);\n      },\n      onKeyDown: function onKeyDown(e) {\n        if (e.key === 'Escape') setFilter('');\n      },\n      style: {\n        flex: '1',\n        marginRight: '.5rem'\n      }\n    }), React.createElement(Select, {\n      value: sort,\n      onChange: function onChange(e) {\n        return setSort(e.target.value);\n      },\n      style: {\n        flex: '1',\n        marginRight: '.5rem'\n      }\n    }, Object.keys(sortFns).map(function (key) {\n      return React.createElement(\"option\", {\n        key: key,\n        value: key\n      }, \"Sort by \", key);\n    })), React.createElement(Button, {\n      onClick: function onClick() {\n        return setSortDesc(function (old) {\n          return !old;\n        });\n      },\n      style: {\n        padding: '.2rem .4rem'\n      }\n    }, sortDesc ? '⬇ Desc' : '⬆ Asc')))), React.createElement(\"div\", {\n      style: {\n        overflow: 'auto'\n      }\n    }, queries.map(function (query) {\n      return React.createElement(\"div\", {\n        key: query.queryHash,\n        onClick: function onClick() {\n          return setActiveQueryHash(query.queryHash);\n        },\n        style: {\n          display: 'flex',\n          borderBottom: \"solid 1px \" + theme.grayAlt,\n          cursor: 'pointer',\n          background: query === activeQuery ? 'rgba(255,255,255,.1)' : undefined\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          flex: '0 0 auto',\n          width: '2rem',\n          height: '2rem',\n          background: getQueryStatusColor(query, theme),\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontWeight: 'bold',\n          textShadow: getQueryStatusLabel(query) === 'stale' ? '0' : '0 0 10px black',\n          color: getQueryStatusLabel(query) === 'stale' ? 'black' : 'white'\n        }\n      }, query.instances.length), React.createElement(Code, {\n        style: {\n          padding: '.5rem'\n        }\n      }, query.queryHash));\n    }))), React.createElement(\"div\", {\n      style: {\n        flex: '1 1 50%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto'\n      }\n    }, React.createElement(\"div\", {\n      style: {\n        padding: '.5rem',\n        background: theme.backgroundAlt\n      }\n    }, \"Query Details\"), activeQuery ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        padding: '1rem',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }\n    }, React.createElement(Code, {\n      style: {\n        lineHeight: '1.8rem'\n      }\n    }, activeQuery.queryHash), React.createElement(\"span\", {\n      style: {\n        padding: '0.3rem .6rem',\n        borderRadius: '0.4rem',\n        fontWeight: 'bold',\n        textShadow: '0 2px 10px black',\n        background: getQueryStatusColor(activeQuery, theme)\n      }\n    }, getQueryStatusLabel(activeQuery))), React.createElement(\"div\", {\n      style: {\n        flex: '1',\n        overflow: 'auto'\n      }\n    }, React.createElement(\"div\", {\n      style: {\n        background: theme.backgroundAlt,\n        padding: '.5rem'\n      }\n    }, \"Actions\"), React.createElement(\"div\", {\n      style: {\n        padding: '1rem'\n      }\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        return activeQuery.fetch();\n      },\n      disabled: activeQuery.state.isFetching,\n      style: {\n        background: theme.active\n      }\n    }, \"Refetch\"), ' ', React.createElement(Button, {\n      onClick: function onClick() {\n        return reactQuery.queryCache.removeQueries(function (q) {\n          return q === activeQuery;\n        });\n      },\n      style: {\n        background: theme.danger\n      }\n    }, \"Remove\"), ' '), React.createElement(\"div\", {\n      style: {\n        background: theme.backgroundAlt,\n        padding: '.5rem'\n      }\n    }, \"Data Explorer\"), React.createElement(\"div\", {\n      style: {\n        padding: '.5rem'\n      }\n    }, React.createElement(Explorer, {\n      label: \"Data\",\n      value: activeQueryJson.state.data,\n      defaultExpanded: {}\n    })), React.createElement(\"div\", {\n      style: {\n        background: theme.backgroundAlt,\n        padding: '.5rem'\n      }\n    }, \"Query Explorer\"), React.createElement(\"div\", {\n      style: {\n        padding: '.5rem'\n      }\n    }, React.createElement(Explorer, {\n      label: \"Query\",\n      value: activeQueryJson,\n      defaultExpanded: {\n        queryKey: true\n      }\n    })))) : React.createElement(\"div\", {\n      style: {\n        padding: '1rem'\n      }\n    }, \"Select a query for more info...\"))));\n  });\n  exports.ReactQueryDevtools = ReactQueryDevtools;\n  exports.ReactQueryDevtoolsPanel = ReactQueryDevtoolsPanel;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../node_modules/match-sorter/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/remove-accents/index.js","../node_modules/match-sorter/dist/match-sorter.esm.js","../src/useLocalStorage.js","../src/theme.js","../src/useMediaQuery.js","../src/utils.js","../src/styledComponents.js","../src/Explorer.js","../src/index.js"],"names":["_extends","Object","i","arguments","source","target","characterMap","chars","allAccents","firstAccent","removeAccents","hasAccents","string","module","rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","STRING_CASE","STRING_CASE_ACRONYM","CONTAINS","ACRONYM","MATCHES","NO_MATCH","caseRankings","CAMEL","PASCAL","KEBAB","SNAKE","NO_CASE","matchSorter","options","_options","keys","_options$threshold","threshold","matchedItems","items","item","_ref","_getHighestRanking","getHighestRanking","rankedItem","rank","keyIndex","_getHighestRanking$ke","keyThreshold","matches","index","getMatchRanking","valuesToRank","getAllValuesToRank","_ref2","itemValue","_ref3","attributes","newRank","newRankedItem","minRanking","maxRanking","testString","prepareValueForComparison","stringToRank","caseRank","getCaseRanking","isPartial","isPartialOfCase","isCasedAcronym","isCaseAcronym","getAcronym","getClosenessRanking","acronym","wordsInString","splitByHyphenWords","wordInString","splitByHyphenWord","containsUpperCase","containsDash","containsUnderscore","startsWithUpperCase","testIndex","splitValue","splitTestString","splitItem","correct","matchingInOrderCharCount","charNumber","j","stringChar","inOrderPercentage","ranking","firstIndex","findMatchingCharacter","matchChar","found","spread","getRanking","aFirst","bFirst","aRankedItem","a","aRank","aKeyIndex","bRankedItem","b","bRank","bKeyIndex","String","keepDiacritics","_ref4","value","key","itemObj","values","getItemValues","allVals","getKeyAttributes","Infinity","getItem","JSON","localStorage","setValue","val","defaultValue","setter","newVal","updater","ThemeContext","React","theme","rest","isMatch","setIsMatch","window","matcher","onChange","query","queries","style","useTheme","mediaStyles","useMediaQuery","newStyles","ref","Panel","styled","fontSize","display","backgroundColor","color","foreground","flexDirection","Button","appearance","fontWeight","background","border","borderRadius","padding","opacity","props","cursor","QueryKeys","QueryKey","alignItems","textShadow","Code","Input","Select","fontFamily","lineHeight","height","WebkitAppearance","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","Entry","outline","Label","Value","danger","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","transition","transform","DefaultRenderer","handleEntry","label","subEntries","subEntryPages","toggle","pageSize","expandedPages","setExpandedPages","d","defaultExpanded","renderer","setExpanded","path","depth","type","makeProperty","newPath","sub","subDefaultExpanded","Array","entry","isServer","backgroundAlt","gray","grayAlt","success","active","warning","initialIsOpen","panelProps","closeButtonProps","toggleButtonProps","rootRef","panelRef","isOpen","setIsOpen","useLocalStorage","isResolvedOpen","setIsResolvedOpen","previousValue","run","containerHeight","panelStyle","otherPanelProps","closeButtonStyle","onCloseClick","otherCloseButtonProps","toggleButtonStyle","onToggleClick","otherToggleButtonProps","position","bottom","right","zIndex","width","maxHeight","boxShadow","borderTop","margin","getStatusRank","q","sortFns","ReactQueryDevtoolsPanel","sort","setSort","filter","setFilter","sortDesc","setSortDesc","sortFn","unsortedQueries","setUnsortedQueries","queryCache","activeQueryHash","setActiveQueryHash","sorted","match","activeQuery","activeQueryJson","hasFresh","getQueryStatusLabel","hasFetching","hasStale","hasInactive","flex","minHeight","overflow","borderRight","justifyContent","marginBottom","pkg","e","marginRight","borderBottom","undefined","getQueryStatusColor","queryKey"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAe,WAAA,UAAA,GAAoB;AACjCA,IAAAA,UAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;AAC5C,WAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;AACzC,YAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;AAEA,aAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;AACtB,cAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;AACrDI,YAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;AACD;AACF;AACF;;AAED,aAAA,MAAA;AAXFL,KAAAA;;AAcA,WAAOA,UAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AACD;;AChBD,MAAIM,YAAY,GAAG;AAClB,SADkB,GAAA;AAElB,SAFkB,GAAA;AAGlB,SAHkB,GAAA;AAIlB,SAJkB,GAAA;AAKlB,SALkB,GAAA;AAMlB,SANkB,GAAA;AAOlB,SAPkB,GAAA;AAQlB,SARkB,GAAA;AASlB,SATkB,GAAA;AAUlB,SAVkB,GAAA;AAWlB,SAXkB,GAAA;AAYlB,SAZkB,IAAA;AAalB,SAbkB,GAAA;AAclB,SAdkB,GAAA;AAelB,SAfkB,GAAA;AAgBlB,SAhBkB,GAAA;AAiBlB,SAjBkB,GAAA;AAkBlB,SAlBkB,GAAA;AAmBlB,SAnBkB,GAAA;AAoBlB,SApBkB,GAAA;AAqBlB,SArBkB,GAAA;AAsBlB,SAtBkB,GAAA;AAuBlB,SAvBkB,GAAA;AAwBlB,SAxBkB,GAAA;AAyBlB,SAzBkB,GAAA;AA0BlB,SA1BkB,GAAA;AA2BlB,SA3BkB,GAAA;AA4BlB,SA5BkB,GAAA;AA6BlB,SA7BkB,GAAA;AA8BlB,SA9BkB,GAAA;AA+BlB,SA/BkB,GAAA;AAgClB,SAhCkB,GAAA;AAiClB,SAjCkB,GAAA;AAkClB,SAlCkB,GAAA;AAmClB,SAnCkB,GAAA;AAoClB,SApCkB,GAAA;AAqClB,SArCkB,GAAA;AAsClB,SAtCkB,GAAA;AAuClB,SAvCkB,GAAA;AAwClB,SAxCkB,GAAA;AAyClB,SAzCkB,GAAA;AA0ClB,SA1CkB,GAAA;AA2ClB,SA3CkB,GAAA;AA4ClB,SA5CkB,GAAA;AA6ClB,SA7CkB,GAAA;AA8ClB,SA9CkB,GAAA;AA+ClB,SA/CkB,GAAA;AAgDlB,SAhDkB,GAAA;AAiDlB,SAjDkB,GAAA;AAkDlB,SAlDkB,GAAA;AAmDlB,SAnDkB,GAAA;AAoDlB,SApDkB,GAAA;AAqDlB,SArDkB,GAAA;AAsDlB,SAtDkB,GAAA;AAuDlB,SAvDkB,GAAA;AAwDlB,SAxDkB,GAAA;AAyDlB,SAzDkB,GAAA;AA0DlB,SA1DkB,GAAA;AA2DlB,SA3DkB,GAAA;AA4DlB,SA5DkB,GAAA;AA6DlB,SA7DkB,GAAA;AA8DlB,SA9DkB,IAAA;AA+DlB,SA/DkB,GAAA;AAgElB,SAhEkB,GAAA;AAiElB,SAjEkB,GAAA;AAkElB,SAlEkB,GAAA;AAmElB,SAnEkB,GAAA;AAoElB,SApEkB,GAAA;AAqElB,SArEkB,GAAA;AAsElB,SAtEkB,GAAA;AAuElB,SAvEkB,GAAA;AAwElB,SAxEkB,GAAA;AAyElB,SAzEkB,GAAA;AA0ElB,SA1EkB,GAAA;AA2ElB,SA3EkB,GAAA;AA4ElB,SA5EkB,GAAA;AA6ElB,SA7EkB,GAAA;AA8ElB,SA9EkB,GAAA;AA+ElB,SA/EkB,GAAA;AAgFlB,SAhFkB,GAAA;AAiFlB,SAjFkB,GAAA;AAkFlB,SAlFkB,GAAA;AAmFlB,SAnFkB,GAAA;AAoFlB,SApFkB,GAAA;AAqFlB,SArFkB,GAAA;AAsFlB,SAtFkB,GAAA;AAuFlB,SAvFkB,GAAA;AAwFlB,SAxFkB,GAAA;AAyFlB,SAzFkB,GAAA;AA0FlB,SA1FkB,GAAA;AA2FlB,SA3FkB,GAAA;AA4FlB,SA5FkB,GAAA;AA6FlB,SA7FkB,GAAA;AA8FlB,SA9FkB,GAAA;AA+FlB,SA/FkB,GAAA;AAgGlB,SAhGkB,GAAA;AAiGlB,SAjGkB,GAAA;AAkGlB,SAlGkB,GAAA;AAmGlB,SAnGkB,GAAA;AAoGlB,SApGkB,GAAA;AAqGlB,SArGkB,GAAA;AAsGlB,SAtGkB,GAAA;AAuGlB,SAvGkB,GAAA;AAwGlB,SAxGkB,GAAA;AAyGlB,SAzGkB,GAAA;AA0GlB,SA1GkB,GAAA;AA2GlB,SA3GkB,GAAA;AA4GlB,SA5GkB,GAAA;AA6GlB,SA7GkB,GAAA;AA8GlB,SA9GkB,GAAA;AA+GlB,SA/GkB,GAAA;AAgHlB,SAhHkB,GAAA;AAiHlB,SAjHkB,GAAA;AAkHlB,SAlHkB,GAAA;AAmHlB,SAnHkB,GAAA;AAoHlB,UApHkB,GAAA;AAqHlB,UArHkB,GAAA;AAsHlB,SAtHkB,GAAA;AAuHlB,SAvHkB,GAAA;AAwHlB,SAxHkB,GAAA;AAyHlB,SAzHkB,GAAA;AA0HlB,SA1HkB,GAAA;AA2HlB,SA3HkB,GAAA;AA4HlB,SA5HkB,GAAA;AA6HlB,SA7HkB,GAAA;AA8HlB,SA9HkB,GAAA;AA+HlB,SA/HkB,GAAA;AAgIlB,SAhIkB,GAAA;AAiIlB,SAjIkB,GAAA;AAkIlB,SAlIkB,GAAA;AAmIlB,SAnIkB,GAAA;AAoIlB,SApIkB,GAAA;AAqIlB,SArIkB,GAAA;AAsIlB,SAtIkB,GAAA;AAuIlB,SAvIkB,GAAA;AAwIlB,SAxIkB,GAAA;AAyIlB,SAzIkB,GAAA;AA0IlB,SA1IkB,GAAA;AA2IlB,SA3IkB,GAAA;AA4IlB,SA5IkB,GAAA;AA6IlB,SA7IkB,GAAA;AA8IlB,SA9IkB,GAAA;AA+IlB,SA/IkB,GAAA;AAgJlB,SAhJkB,GAAA;AAiJlB,SAjJkB,GAAA;AAkJlB,SAlJkB,GAAA;AAmJlB,SAnJkB,GAAA;AAoJlB,SApJkB,GAAA;AAqJlB,SArJkB,GAAA;AAsJlB,SAtJkB,GAAA;AAuJlB,SAvJkB,GAAA;AAwJlB,SAxJkB,GAAA;AAyJlB,SAzJkB,GAAA;AA0JlB,SA1JkB,GAAA;AA2JlB,SA3JkB,GAAA;AA4JlB,SA5JkB,GAAA;AA6JlB,SA7JkB,GAAA;AA8JlB,SA9JkB,IAAA;AA+JlB,SA/JkB,IAAA;AAgKlB,SAhKkB,GAAA;AAiKlB,SAjKkB,GAAA;AAkKlB,SAlKkB,GAAA;AAmKlB,SAnKkB,GAAA;AAoKlB,SApKkB,GAAA;AAqKlB,SArKkB,GAAA;AAsKlB,UAtKkB,GAAA;AAuKlB,UAvKkB,GAAA;AAwKlB,SAxKkB,GAAA;AAyKlB,SAzKkB,GAAA;AA0KlB,SA1KkB,GAAA;AA2KlB,SA3KkB,GAAA;AA4KlB,SA5KkB,GAAA;AA6KlB,SA7KkB,GAAA;AA8KlB,SA9KkB,GAAA;AA+KlB,SA/KkB,GAAA;AAgLlB,SAhLkB,GAAA;AAiLlB,SAjLkB,GAAA;AAkLlB,SAlLkB,GAAA;AAmLlB,SAnLkB,GAAA;AAoLlB,UApLkB,GAAA;AAqLlB,UArLkB,GAAA;AAsLlB,SAtLkB,GAAA;AAuLlB,SAvLkB,GAAA;AAwLlB,SAxLkB,GAAA;AAyLlB,SAzLkB,GAAA;AA0LlB,SA1LkB,GAAA;AA2LlB,SA3LkB,GAAA;AA4LlB,SA5LkB,GAAA;AA6LlB,UA7LkB,GAAA;AA8LlB,UA9LkB,GAAA;AA+LlB,SA/LkB,GAAA;AAgMlB,SAhMkB,GAAA;AAiMlB,SAjMkB,GAAA;AAkMlB,SAlMkB,GAAA;AAmMlB,SAnMkB,GAAA;AAoMlB,SApMkB,GAAA;AAqMlB,SArMkB,IAAA;AAsMlB,SAtMkB,IAAA;AAuMlB,UAvMkB,GAAA;AAwMlB,UAxMkB,GAAA;AAyMlB,SAzMkB,GAAA;AA0MlB,SA1MkB,GAAA;AA2MlB,SA3MkB,GAAA;AA4MlB,SA5MkB,GAAA;AA6MlB,SA7MkB,GAAA;AA8MlB,SA9MkB,GAAA;AA+MlB,UA/MkB,GAAA;AAgNlB,UAhNkB,GAAA;AAiNlB,SAjNkB,GAAA;AAkNlB,SAlNkB,GAAA;AAmNlB,SAnNkB,GAAA;AAoNlB,SApNkB,GAAA;AAqNlB,SArNkB,GAAA;AAsNlB,SAtNkB,GAAA;AAuNlB,SAvNkB,GAAA;AAwNlB,SAxNkB,GAAA;AAyNlB,SAzNkB,GAAA;AA0NlB,SA1NkB,GAAA;AA2NlB,SA3NkB,GAAA;AA4NlB,SA5NkB,GAAA;AA6NlB,SA7NkB,GAAA;AA8NlB,SA9NkB,GAAA;AA+NlB,SA/NkB,GAAA;AAgOlB,SAhOkB,GAAA;AAiOlB,SAjOkB,GAAA;AAkOlB,SAlOkB,GAAA;AAmOlB,SAnOkB,GAAA;AAoOlB,SApOkB,GAAA;AAqOlB,UArOkB,GAAA;AAsOlB,UAtOkB,GAAA;AAuOlB,SAvOkB,GAAA;AAwOlB,SAxOkB,GAAA;AAyOlB,SAzOkB,GAAA;AA0OlB,SA1OkB,GAAA;AA2OlB,SA3OkB,GAAA;AA4OlB,SA5OkB,GAAA;AA6OlB,SA7OkB,GAAA;AA8OlB,SA9OkB,GAAA;AA+OlB,SA/OkB,GAAA;AAgPlB,SAhPkB,GAAA;AAiPlB,SAjPkB,GAAA;AAkPlB,SAlPkB,GAAA;AAmPlB,SAnPkB,GAAA;AAoPlB,SApPkB,GAAA;AAqPlB,UArPkB,GAAA;AAsPlB,UAtPkB,GAAA;AAuPlB,SAvPkB,GAAA;AAwPlB,SAxPkB,GAAA;AAyPlB,SAzPkB,GAAA;AA0PlB,SA1PkB,GAAA;AA2PlB,UA3PkB,GAAA;AA4PlB,UA5PkB,GAAA;AA6PlB,SA7PkB,GAAA;AA8PlB,SA9PkB,GAAA;AA+PlB,SA/PkB,GAAA;AAgQlB,UAhQkB,GAAA;AAiQlB,UAjQkB,GAAA;AAkQlB,SAlQkB,GAAA;AAmQlB,SAnQkB,GAAA;AAoQlB,SApQkB,GAAA;AAqQlB,SArQkB,GAAA;AAsQlB,SAtQkB,GAAA;AAuQlB,SAvQkB,GAAA;AAwQlB,SAxQkB,GAAA;AAyQlB,SAzQkB,GAAA;AA0QlB,SA1QkB,GAAA;AA2QlB,SA3QkB,GAAA;AA4QlB,SA5QkB,GAAA;AA6QlB,SA7QkB,GAAA;AA8QlB,SA9QkB,GAAA;AA+QlB,SA/QkB,GAAA;AAgRlB,SAhRkB,GAAA;AAiRlB,SAjRkB,GAAA;AAkRlB,SAlRkB,GAAA;AAmRlB,SAnRkB,GAAA;AAoRlB,SApRkB,GAAA;AAqRlB,SArRkB,GAAA;AAsRlB,SAtRkB,GAAA;AAuRlB,SAvRkB,GAAA;AAwRlB,SAxRkB,GAAA;AAyRlB,SAzRkB,GAAA;AA0RlB,SA1RkB,GAAA;AA2RlB,SA3RkB,GAAA;AA4RlB,SA5RkB,GAAA;AA6RlB,SA7RkB,GAAA;AA8RlB,SA9RkB,GAAA;AA+RlB,SA/RkB,GAAA;AAgSlB,SAhSkB,GAAA;AAiSlB,SAjSkB,GAAA;AAkSlB,SAlSkB,GAAA;AAmSlB,SAnSkB,GAAA;AAoSlB,SApSkB,IAAA;AAqSlB,SArSkB,IAAA;AAsSlB,SAtSkB,GAAA;AAuSlB,SAvSkB,GAAA;AAwSlB,SAxSkB,IAAA;AAySlB,SAzSkB,IAAA;AA0SlB,SA1SkB,GAAA;AA2SlB,SA3SkB,GAAA;AA4SlB,SA5SkB,GAAA;AA6SlB,SA7SkB,GAAA;AA8SlB,UA9SkB,GAAA;AA+SlB,UA/SkB,GAAA;AAgTlB,SAhTkB,GAAA;AAiTlB,SAjTkB,GAAA;AAkTlB,SAlTkB,GAAA;AAmTlB,SAnTkB,GAAA;AAoTlB,UApTkB,GAAA;AAqTlB,UArTkB,GAAA;AAsTlB,UAtTkB,GAAA;AAuTlB,UAvTkB,GAAA;AAwTlB,UAxTkB,GAAA;AAyTlB,UAzTkB,GAAA;AA0TlB,SA1TkB,GAAA;AA2TlB,SA3TkB,GAAA;AA4TlB,SA5TkB,GAAA;AA6TlB,SA7TkB,GAAA;AA8TlB,SA9TkB,GAAA;AA+TlB,SA/TkB,GAAA;AAgUlB,SAhUkB,GAAA;AAiUlB,SAjUkB,GAAA;AAkUlB,SAlUkB,GAAA;AAmUlB,SAnUkB,GAAA;AAoUlB,SApUkB,GAAA;AAqUlB,SArUkB,GAAA;AAsUlB,SAtUkB,GAAA;AAuUlB,SAvUkB,GAAA;AAwUlB,SAxUkB,GAAA;AAyUlB,SAzUkB,GAAA;AA0UlB,SA1UkB,GAAA;AA2UlB,SA3UkB,GAAA;AA4UlB,SA5UkB,GAAA;AA6UlB,SA7UkB,GAAA;AA8UlB,SA9UkB,GAAA;AA+UlB,SA/UkB,GAAA;AAgVlB,SAhVkB,GAAA;AAiVlB,SAjVkB,GAAA;AAkVlB,UAlVkB,GAAA;AAmVlB,UAnVkB,GAAA;AAoVlB,UApVkB,GAAA;AAqVlB,UArVkB,GAAA;AAsVlB,UAtVkB,GAAA;AAuVlB,UAvVkB,GAAA;AAwVlB,UAxVkB,GAAA;AAyVlB,UAzVkB,GAAA;AA0VlB,SA1VkB,GAAA;AA2VlB,SA3VkB,GAAA;AA4VlB,SA5VkB,GAAA;AA6VlB,SA7VkB,GAAA;AA8VlB,UA9VkB,GAAA;AA+VlB,SA/VkB,GAAA;AAgWlB,SAhWkB,GAAA;AAiWlB,SAjWkB,GAAA;AAkWlB,UAlWkB,GAAA;AAmWlB,UAnWkB,GAAA;AAoWlB,UApWkB,GAAA;AAqWlB,UArWkB,GAAA;AAsWlB,UAtWkB,GAAA;AAuWlB,UAvWkB,GAAA;AAwWlB,UAxWkB,GAAA;AAyWlB,UAzWkB,GAAA;AA0WlB,SA1WkB,GAAA;AA2WlB,SA3WkB,GAAA;AA4WlB,UA5WkB,GAAA;AA6WlB,UA7WkB,GAAA;AA8WlB,UA9WkB,GAAA;AA+WlB,UA/WkB,GAAA;AAgXlB,UAhXkB,GAAA;AAiXlB,UAjXkB,GAAA;AAkXlB,UAlXkB,GAAA;AAmXlB,UAnXkB,GAAA;AAoXlB,UApXkB,GAAA;AAqXlB,UArXkB,GAAA;AAsXlB,UAtXkB,GAAA;AAuXlB,UAvXkB,GAAA;AAwXlB,SAxXkB,GAAA;AAyXlB,SAzXkB,GAAA;AA0XlB,SA1XkB,GAAA;AA2XlB,SA3XkB,GAAA;AA4XlB,UA5XkB,GAAA;AA6XlB,UA7XkB,GAAA;AA8XlB,SA9XkB,GAAA;AA+XlB,SA/XkB,GAAA;AAgYlB,UAhYkB,GAAA;AAiYlB,UAjYkB,GAAA;AAkYlB,UAlYkB,GAAA;AAmYlB,UAnYkB,GAAA;AAoYlB,UApYkB,GAAA;AAqYlB,UArYkB,GAAA;AAsYlB,UAtYkB,GAAA;AAuYlB,UAvYkB,GAAA;AAwYlB,UAxYkB,GAAA;AAyYlB,UAzYkB,GAAA;AA0YlB,UA1YkB,GAAA;AA2YlB,UA3YkB,GAAA;AA4YlB,UA5YkB,GAAA;AA6YlB,UA7YkB,GAAA;AA8YlB,UA9YkB,GAAA;AA+YlB,UAAM;AA/YY,GAAnB;AAkZA,MAAIC,KAAK,GAAGN,MAAM,CAANA,IAAAA,CAAAA,YAAAA,EAAAA,IAAAA,CAAZ,GAAYA,CAAZ;AACA,MAAIO,UAAU,GAAG,IAAA,MAAA,CAAA,KAAA,EAAjB,GAAiB,CAAjB;AACA,MAAIC,WAAW,GAAG,IAAA,MAAA,CAAA,KAAA,EAAlB,EAAkB,CAAlB;;AAEA,MAAIC,aAAa,GAAG,UAAA,MAAA,EAAiB;AACpC,WAAO,MAAM,CAAN,OAAA,CAAA,UAAA,EAA2B,UAAA,KAAA,EAAgB;AACjD,aAAOJ,YAAY,CAAnB,KAAmB,CAAnB;AADD,KAAO,CAAP;AADD,GAAA;;AAMA,MAAIK,UAAU,GAAG,UAAA,MAAA,EAAiB;AACjC,WAAO,CAAC,CAACC,MAAM,CAANA,KAAAA,CAAT,WAASA,CAAT;AADD,GAAA;;AAIAC,MAAAA,eAAAA,GAAAA,aAAAA;AACAA,MAAAA,GAAAA,GAAAA,UAAAA;AACAA,MAAAA,MAAAA,GAAAA,aAAAA;;;AC/ZA,MAAIC,QAAQ,GAAG;AACbC,IAAAA,oBAAoB,EADP,CAAA;AAEbC,IAAAA,KAAK,EAFQ,CAAA;AAGbC,IAAAA,WAAW,EAHE,CAAA;AAIbC,IAAAA,gBAAgB,EAJH,CAAA;AAKbC,IAAAA,WAAW,EALE,CAAA;AAMbC,IAAAA,mBAAmB,EANN,CAAA;AAObC,IAAAA,QAAQ,EAPK,CAAA;AAQbC,IAAAA,OAAO,EARM,CAAA;AASbC,IAAAA,OAAO,EATM,CAAA;AAUbC,IAAAA,QAAQ,EAAE;AAVG,GAAf;AAYA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EADY,GAAA;AAEjBC,IAAAA,MAAM,EAFW,GAAA;AAGjBC,IAAAA,KAAK,EAHY,GAAA;AAIjBC,IAAAA,KAAK,EAJY,GAAA;AAKjBC,IAAAA,OAAO,EAAE;AALQ,GAAnB;AAOAC,EAAAA,WAAW,CAAXA,QAAAA,GAAAA,QAAAA;AACAA,EAAAA,WAAW,CAAXA,YAAAA,GAAAA,YAAAA;AACA;;;;;;;;AAQA,WAAA,WAAA,CAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAA4C;AAC1C,QAAIC,OAAO,KAAK,KAAhB,CAAA,EAAwB;AACtBA,MAAAA,OAAO,GAAPA,EAAAA;AAFwC,KAAA,CAAA;;;AAM1C,QAAI,CAAJ,KAAA,EAAY,OAAA,KAAA;AACZ,QAAIC,QAAQ,GAAZ,OAAA;AAAA,QACIC,IAAI,GAAGD,QAAQ,CADnB,IAAA;AAAA,QAEIE,kBAAkB,GAAGF,QAAQ,CAFjC,SAAA;AAAA,QAGIG,SAAS,GAAGD,kBAAkB,KAAK,KAAvBA,CAAAA,GAAgCrB,QAAQ,CAAxCqB,OAAAA,GAHhB,kBAAA;AAIA,QAAIE,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAAAA,mBAAAA,EAAnB,EAAmBA,CAAnB;AACA,WAAO,YAAY,CAAZ,IAAA,CAAA,eAAA,EAAA,GAAA,CAAuC,UAAA,IAAA,EAAgB;AAC5D,UAAIC,IAAI,GAAGC,IAAI,CAAf,IAAA;AACA,aAAA,IAAA;AAFF,KAAO,CAAP;;AAKA,aAAA,mBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,KAAA,EAAmD;AACjD,UAAIC,kBAAkB,GAAGC,iBAAiB,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAA1C,OAA0C,CAA1C;AAAA,UACIC,UAAU,GAAGF,kBAAkB,CADnC,UAAA;AAAA,UAEIG,IAAI,GAAGH,kBAAkB,CAF7B,IAAA;AAAA,UAGII,QAAQ,GAAGJ,kBAAkB,CAHjC,QAAA;AAAA,UAIIK,qBAAqB,GAAGL,kBAAkB,CAJ9C,YAAA;AAAA,UAKIM,YAAY,GAAGD,qBAAqB,KAAK,KAA1BA,CAAAA,GAAAA,SAAAA,GALnB,qBAAA;;AAOA,UAAIF,IAAI,IAAR,YAAA,EAA0B;AACxBI,QAAAA,OAAO,CAAPA,IAAAA,CAAa;AACXL,UAAAA,UAAU,EADC,UAAA;AAEXJ,UAAAA,IAAI,EAFO,IAAA;AAGXK,UAAAA,IAAI,EAHO,IAAA;AAIXK,UAAAA,KAAK,EAJM,KAAA;AAKXJ,UAAAA,QAAQ,EAAEA;AALC,SAAbG;AAOD;;AAED,aAAA,OAAA;AACD;AACF;AACD;;;;;;;;;;AAUA,WAAA,iBAAA,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAuD;AACrD,QAAI,CAAJ,IAAA,EAAW;AACT,aAAO;AACL;AACAL,QAAAA,UAAU,EAFL,IAAA;AAGLC,QAAAA,IAAI,EAAEM,eAAe,CAAA,IAAA,EAAA,KAAA,EAHhB,OAGgB,CAHhB;AAILL,QAAAA,QAAQ,EAAE,CAJL,CAAA;AAKLE,QAAAA,YAAY,EAAEf,OAAO,CAACI;AALjB,OAAP;AAOD;;AAED,QAAIe,YAAY,GAAGC,kBAAkB,CAAA,IAAA,EAArC,IAAqC,CAArC;AACA,WAAO,YAAY,CAAZ,MAAA,CAAoB,UAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAA2B;AACpD,UAAIR,IAAI,GAAGS,KAAK,CAAhB,IAAA;AAAA,UACIV,UAAU,GAAGU,KAAK,CADtB,UAAA;AAAA,UAEIR,QAAQ,GAAGQ,KAAK,CAFpB,QAAA;AAAA,UAGIN,YAAY,GAAGM,KAAK,CAHxB,YAAA;AAIA,UAAIC,SAAS,GAAGC,KAAK,CAArB,SAAA;AAAA,UACIC,UAAU,GAAGD,KAAK,CADtB,UAAA;AAEA,UAAIE,OAAO,GAAGP,eAAe,CAAA,SAAA,EAAA,KAAA,EAA7B,OAA6B,CAA7B;AACA,UAAIQ,aAAa,GAAjB,UAAA;AACA,UAAIC,UAAU,GAAGH,UAAU,CAA3B,UAAA;AAAA,UACII,UAAU,GAAGJ,UAAU,CAD3B,UAAA;AAAA,UAEIpB,SAAS,GAAGoB,UAAU,CAF1B,SAAA;;AAIA,UAAIC,OAAO,GAAPA,UAAAA,IAAwBA,OAAO,IAAI3C,QAAQ,CAA/C,OAAA,EAAyD;AACvD2C,QAAAA,OAAO,GAAPA,UAAAA;AADF,OAAA,MAEO,IAAIA,OAAO,GAAX,UAAA,EAA0B;AAC/BA,QAAAA,OAAO,GAAPA,UAAAA;AACD;;AAED,UAAIA,OAAO,GAAX,IAAA,EAAoB;AAClBb,QAAAA,IAAI,GAAJA,OAAAA;AACAC,QAAAA,QAAQ,GAARA,CAAAA;AACAE,QAAAA,YAAY,GAAZA,SAAAA;AACAW,QAAAA,aAAa,GAAbA,SAAAA;AACD;;AAED,aAAO;AACLf,QAAAA,UAAU,EADL,aAAA;AAELC,QAAAA,IAAI,EAFC,IAAA;AAGLC,QAAAA,QAAQ,EAHH,QAAA;AAILE,QAAAA,YAAY,EAAEA;AAJT,OAAP;AA1BK,KAAA,EAgCJ;AACDH,MAAAA,IAAI,EAAE9B,QAAQ,CADb,QAAA;AAED+B,MAAAA,QAAQ,EAAE,CAFT,CAAA;AAGDE,MAAAA,YAAY,EAAEf,OAAO,CAACI;AAHrB,KAhCI,CAAP;AAqCD;AACD;;;;;;;;;AASA,WAAA,eAAA,CAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAA4D;AAC1D;AACAyB,IAAAA,UAAU,GAAGC,yBAAyB,CAAA,UAAA,EAAtCD,OAAsC,CAAtCA;AACAE,IAAAA,YAAY,GAAGD,yBAAyB,CAAA,YAAA,EAHkB,OAGlB,CAAxCC,CAH0D,CAAA;;AAK1D,QAAIA,YAAY,CAAZA,MAAAA,GAAsBF,UAAU,CAApC,MAAA,EAA6C;AAC3C,aAAO/C,QAAQ,CAAf,QAAA;AANwD,KAAA,CAAA;;;AAU1D,QAAI+C,UAAU,KAAd,YAAA,EAAiC;AAC/B,aAAO/C,QAAQ,CAAf,oBAAA;AACD;;AAED,QAAIkD,QAAQ,GAAGC,cAAc,CAA7B,UAA6B,CAA7B;AACA,QAAIC,SAAS,GAAGC,eAAe,CAAA,UAAA,EAAA,YAAA,EAA/B,QAA+B,CAA/B;AACA,QAAIC,cAAc,GAAGC,aAAa,CAAA,UAAA,EAAA,YAAA,EAhBwB,QAgBxB,CAAlC,CAhB0D,CAAA;;AAkB1DR,IAAAA,UAAU,GAAGA,UAAU,CAAvBA,WAAaA,EAAbA;AACAE,IAAAA,YAAY,GAAGA,YAAY,CAnB+B,WAmB3CA,EAAfA,CAnB0D,CAAA;;AAqB1D,QAAIF,UAAU,KAAd,YAAA,EAAiC;AAC/B,aAAO/C,QAAQ,CAARA,KAAAA,GAAP,QAAA;AAtBwD,KAAA,CAAA;;;AA0B1D,QAAI+C,UAAU,CAAVA,OAAAA,CAAAA,YAAAA,MAAJ,CAAA,EAA4C;AAC1C,aAAO/C,QAAQ,CAARA,WAAAA,GAAP,QAAA;AA3BwD,KAAA,CAAA;;;AA+B1D,QAAI+C,UAAU,CAAVA,OAAAA,CAAmB,MAAnBA,YAAAA,MAA2C,CAA/C,CAAA,EAAmD;AACjD,aAAO/C,QAAQ,CAARA,gBAAAA,GAAP,QAAA;AAhCwD,KAAA,CAAA;;;AAoC1D,QAAA,SAAA,EAAe;AACb,aAAOA,QAAQ,CAARA,WAAAA,GAAP,QAAA;AArCwD,KAAA,CAAA;;;AAyC1D,QAAIkD,QAAQ,GAARA,CAAAA,IAAJ,cAAA,EAAoC;AAClC,aAAOlD,QAAQ,CAARA,mBAAAA,GAAP,QAAA;AA1CwD,KAAA,CAAA;;;AA8C1D,QAAI+C,UAAU,CAAVA,OAAAA,CAAAA,YAAAA,MAAqC,CAAzC,CAAA,EAA6C;AAC3C,aAAO/C,QAAQ,CAARA,QAAAA,GAAP,QAAA;AADF,KAAA,MAEO,IAAIiD,YAAY,CAAZA,MAAAA,KAAJ,CAAA,EAA+B;AACpC;AACA;AACA;AACA,aAAOjD,QAAQ,CAAf,QAAA;AApDwD,KAAA,CAAA;;;AAwD1D,QAAIwD,UAAU,CAAVA,UAAU,CAAVA,CAAAA,OAAAA,CAAAA,YAAAA,MAAiD,CAArD,CAAA,EAAyD;AACvD,aAAOxD,QAAQ,CAARA,OAAAA,GAAP,QAAA;AAzDwD,KAAA,CAAA;AA2D1D;;;AAGA,WAAOyD,mBAAmB,CAAA,UAAA,EAA1B,YAA0B,CAA1B;AACD;AACD;;;;;;;;AAQA,WAAA,UAAA,CAAA,MAAA,EAA4B;AAC1B,QAAIC,OAAO,GAAX,EAAA;AACA,QAAIC,aAAa,GAAG7D,MAAM,CAANA,KAAAA,CAApB,GAAoBA,CAApB;AACA6D,IAAAA,aAAa,CAAbA,OAAAA,CAAsB,UAAA,YAAA,EAAwB;AAC5C,UAAIC,kBAAkB,GAAGC,YAAY,CAAZA,KAAAA,CAAzB,GAAyBA,CAAzB;AACAD,MAAAA,kBAAkB,CAAlBA,OAAAA,CAA2B,UAAA,iBAAA,EAA6B;AACtDF,QAAAA,OAAO,IAAII,iBAAiB,CAAjBA,MAAAA,CAAAA,CAAAA,EAAXJ,CAAWI,CAAXJ;AADFE,OAAAA;AAFFD,KAAAA;AAMA,WAAA,OAAA;AACD;AACD;;;;;;;;AAQA,WAAA,cAAA,CAAA,UAAA,EAAoC;AAClC,QAAII,iBAAiB,GAAGhB,UAAU,CAAVA,WAAAA,OAAxB,UAAA;AACA,QAAIiB,YAAY,GAAGjB,UAAU,CAAVA,OAAAA,CAAAA,GAAAA,KAAnB,CAAA;AACA,QAAIkB,kBAAkB,GAAGlB,UAAU,CAAVA,OAAAA,CAAAA,GAAAA,KAAzB,CAAA;;AAEA,QAAI,CAAA,iBAAA,IAAsB,CAAtB,kBAAA,IAAJ,YAAA,EAA+D;AAC7D,aAAOpC,YAAY,CAAnB,KAAA;AACD;;AAED,QAAI,CAAA,iBAAA,IAAA,kBAAA,IAA4C,CAAhD,YAAA,EAA+D;AAC7D,aAAOA,YAAY,CAAnB,KAAA;AACD;;AAED,QAAIoD,iBAAiB,IAAI,CAArBA,YAAAA,IAAsC,CAA1C,kBAAA,EAA+D;AAC7D,UAAIG,mBAAmB,GAAGnB,UAAU,CAAVA,CAAU,CAAVA,CAAAA,WAAAA,OAAgCA,UAAU,CAApE,CAAoE,CAApE;;AAEA,UAAA,mBAAA,EAAyB;AACvB,eAAOpC,YAAY,CAAnB,MAAA;AACD;;AAED,aAAOA,YAAY,CAAnB,KAAA;AACD;;AAED,WAAOA,YAAY,CAAnB,OAAA;AACD;AACD;;;;;;;;;;;;;;;AAeA,WAAA,eAAA,CAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAAgE;AAC9D,QAAIwD,SAAS,GAAGpB,UAAU,CAAVA,WAAAA,GAAAA,OAAAA,CAAiCE,YAAY,CAA7D,WAAiDA,EAAjCF,CAAhB;;AAEA,YAAA,WAAA;AACE,WAAKpC,YAAY,CAAjB,KAAA;AACE,eAAOoC,UAAU,CAACoB,SAAS,GAApBpB,CAAU,CAAVA,KAAP,GAAA;;AAEF,WAAKpC,YAAY,CAAjB,KAAA;AACE,eAAOoC,UAAU,CAACoB,SAAS,GAApBpB,CAAU,CAAVA,KAAP,GAAA;;AAEF,WAAKpC,YAAY,CAAjB,MAAA;AACA,WAAKA,YAAY,CAAjB,KAAA;AACE,eAAOwD,SAAS,KAAK,CAAdA,CAAAA,IAAoBpB,UAAU,CAAVA,SAAU,CAAVA,KAA0BA,UAAU,CAAVA,SAAU,CAAVA,CAArD,WAAqDA,EAArD;;AAEF;AACE,eAAA,KAAA;AAZJ;AAcD;AACD;;;;;;;;;;;;AAYA,WAAA,aAAA,CAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAA2D;AACzD,QAAIqB,UAAU,GAAd,IAAA;;AAEA,YAAA,QAAA;AACE,WAAKzD,YAAY,CAAjB,KAAA;AACEyD,QAAAA,UAAU,GAAVA,GAAAA;AACA;;AAEF,WAAKzD,YAAY,CAAjB,KAAA;AACEyD,QAAAA,UAAU,GAAVA,GAAAA;AACA;;AAEF,WAAKzD,YAAY,CAAjB,MAAA;AACA,WAAKA,YAAY,CAAjB,KAAA;AACEyD,QAAAA,UAAU,GAAVA,WAAAA;AACA;;AAEF;AACEA,QAAAA,UAAU,GAAVA,IAAAA;AAfJ;;AAkBA,QAAIC,eAAe,GAAGtB,UAAU,CAAVA,KAAAA,CAAtB,UAAsBA,CAAtB;AACA,WAAO,YAAY,CAAZ,WAAA,GAAA,KAAA,CAAA,EAAA,EAAA,MAAA,CAA4C,UAAA,OAAA,EAAA,IAAA,EAAA,SAAA,EAAoC;AACrF,UAAIuB,SAAS,GAAGD,eAAe,CAA/B,SAA+B,CAA/B;AACA,aAAOE,OAAO,IAAPA,SAAAA,IAAwBD,SAAS,CAATA,CAAS,CAATA,CAAAA,WAAAA,OAA/B,IAAA;AAFK,KAAA,EAAP,IAAO,CAAP;AAID;AACD;;;;;;;;;;;;AAYA,WAAA,mBAAA,CAAA,UAAA,EAAA,YAAA,EAAuD;AACrD,QAAIE,wBAAwB,GAA5B,CAAA;AACA,QAAIC,UAAU,GAAd,CAAA;;AAEA,aAAA,qBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAyD;AACvD,WAAK,IAAIC,CAAC,GAAV,KAAA,EAAoBA,CAAC,GAAG5E,MAAM,CAA9B,MAAA,EAAuC4E,CAAvC,EAAA,EAA4C;AAC1C,YAAIC,UAAU,GAAG7E,MAAM,CAAvB,CAAuB,CAAvB;;AAEA,YAAI6E,UAAU,KAAd,SAAA,EAA8B;AAC5BH,UAAAA,wBAAwB,IAAxBA,CAAAA;AACA,iBAAOE,CAAC,GAAR,CAAA;AACD;AACF;;AAED,aAAO,CAAP,CAAA;AACD;;AAED,aAAA,UAAA,CAAA,MAAA,EAA4B;AAC1B,UAAIE,iBAAiB,GAAGJ,wBAAwB,GAAGvB,YAAY,CAA/D,MAAA;AACA,UAAI4B,OAAO,GAAG7E,QAAQ,CAARA,OAAAA,GAAmB4E,iBAAiB,IAAI,IAAtD,MAAkD,CAAlD;AACA,aAAA,OAAA;AACD;;AAED,QAAIE,UAAU,GAAGC,qBAAqB,CAAC9B,YAAY,CAAb,CAAa,CAAb,EAAA,UAAA,EAAtC,CAAsC,CAAtC;;AAEA,QAAI6B,UAAU,GAAd,CAAA,EAAoB;AAClB,aAAO9E,QAAQ,CAAf,QAAA;AACD;;AAEDyE,IAAAA,UAAU,GAAVA,UAAAA;;AAEA,SAAK,IAAIrF,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG6D,YAAY,CAAhC,MAAA,EAAyC7D,CAAzC,EAAA,EAA8C;AAC5C,UAAI4F,SAAS,GAAG/B,YAAY,CAA5B,CAA4B,CAA5B;AACAwB,MAAAA,UAAU,GAAGM,qBAAqB,CAAA,SAAA,EAAA,UAAA,EAAlCN,UAAkC,CAAlCA;AACA,UAAIQ,KAAK,GAAGR,UAAU,GAAG,CAAzB,CAAA;;AAEA,UAAI,CAAJ,KAAA,EAAY;AACV,eAAOzE,QAAQ,CAAf,QAAA;AACD;AACF;;AAED,QAAIkF,MAAM,GAAGT,UAAU,GAAvB,UAAA;AACA,WAAOU,UAAU,CAAjB,MAAiB,CAAjB;AACD;AACD;;;;;;;;AAQA,WAAA,eAAA,CAAA,CAAA,EAAA,CAAA,EAA+B;AAC7B,QAAIC,MAAM,GAAG,CAAb,CAAA;AACA,QAAIC,MAAM,GAAV,CAAA;AACA,QAAIC,WAAW,GAAGC,CAAC,CAAnB,UAAA;AAAA,QACIC,KAAK,GAAGD,CAAC,CADb,IAAA;AAAA,QAEIE,SAAS,GAAGF,CAAC,CAFjB,QAAA;AAGA,QAAIG,WAAW,GAAGC,CAAC,CAAnB,UAAA;AAAA,QACIC,KAAK,GAAGD,CAAC,CADb,IAAA;AAAA,QAEIE,SAAS,GAAGF,CAAC,CAFjB,QAAA;;AAIA,QAAIH,KAAK,KAAT,KAAA,EAAqB;AACnB,UAAIC,SAAS,KAAb,SAAA,EAA6B;AAC3B;AACA;AACA;AACA,eAAOK,MAAM,CAANA,WAAM,CAANA,CAAAA,aAAAA,CAAP,WAAOA,CAAP;AAJF,OAAA,MAKO;AACL,eAAOL,SAAS,GAATA,SAAAA,GAAAA,MAAAA,GAAP,MAAA;AACD;AARH,KAAA,MASO;AACL,aAAOD,KAAK,GAALA,KAAAA,GAAAA,MAAAA,GAAP,MAAA;AACD;AACF;AACD;;;;;;;;AAQA,WAAA,yBAAA,CAAA,KAAA,EAAA,KAAA,EAAiD;AAC/C,QAAIO,cAAc,GAAGC,KAAK,CAA1B,cAAA;AACAC,IAAAA,KAAK,GAAG,KAFuC,KAE/CA,CAF+C,CAAA;;AAI/C,QAAI,CAAJ,cAAA,EAAqB;AACnBA,MAAAA,KAAK,GAAGrG,eAAa,CAArBqG,KAAqB,CAArBA;AACD;;AAED,WAAA,KAAA;AACD;AACD;;;;;;;;AAQA,WAAA,aAAA,CAAA,IAAA,EAAA,GAAA,EAAkC;AAChC,QAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3BC,MAAAA,GAAG,GAAGA,GAAG,CAATA,GAAAA;AACD;;AAED,QAAA,KAAA;;AAEA,QAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AAC7BD,MAAAA,KAAK,GAAGC,GAAG,CADkB,IAClB,CAAXD,CAD6B,CAAA;AAA/B,KAAA,MAEO,IAAIC,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,MAAqB,CAAzB,CAAA,EAA6B;AAClC;AACAD,MAAAA,KAAK,GAAG,GAAG,CAAH,KAAA,CAAA,GAAA,EAAA,MAAA,CAAsB,UAAA,OAAA,EAAA,SAAA,EAA8B;AAC1D,eAAOE,OAAO,GAAGA,OAAO,CAAV,SAAU,CAAV,GAAd,IAAA;AADM,OAAA,EAARF,IAAQ,CAARA;AAFK,KAAA,MAKA;AACLA,MAAAA,KAAK,GAAGxE,IAAI,CAAZwE,GAAY,CAAZA;AAf8B,KAAA,CAAA;AAiBhC;;;AAGA,WAAOA,KAAK,IAALA,IAAAA,GAAgB,GAAA,MAAA,CAAhBA,KAAgB,CAAhBA,GAAP,IAAA;AACD;AACD;;;;;;;;AAQA,WAAA,kBAAA,CAAA,IAAA,EAAA,IAAA,EAAwC;AACtC,WAAO,IAAI,CAAJ,MAAA,CAAY,UAAA,OAAA,EAAA,GAAA,EAAwB;AACzC,UAAIG,MAAM,GAAGC,aAAa,CAAA,IAAA,EAA1B,GAA0B,CAA1B;;AAEA,UAAA,MAAA,EAAY;AACVD,QAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,SAAA,EAAqB;AAClCE,UAAAA,OAAO,CAAPA,IAAAA,CAAa;AACX9D,YAAAA,SAAS,EADE,SAAA;AAEXE,YAAAA,UAAU,EAAE6D,gBAAgB,CAAA,GAAA;AAFjB,WAAbD;AADFF,SAAAA;AAMD;;AAED,aAAA,OAAA;AAZK,KAAA,EAAP,EAAO,CAAP;AAcD;AACD;;;;;;;AAOA,WAAA,gBAAA,CAAA,GAAA,EAA+B;AAC7B,QAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3BF,MAAAA,GAAG,GAAG;AACJA,QAAAA,GAAG,EAAEA;AADD,OAANA;AAGD;;AAED,WAAOhH,UAAQ,CAAC;AACd4D,MAAAA,UAAU,EADI,QAAA;AAEdD,MAAAA,UAAU,EAAE,CAAC2D;AAFC,KAAD,EAAf,GAAe,CAAf;AAID;;ACtfD,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,GAAA,EAAO;AACrB,QAAI;AACF,aAAOC,IAAI,CAAJA,KAAAA,CAAWC,YAAY,CAAZA,OAAAA,CAAlB,GAAkBA,CAAXD,CAAP;AADF,KAAA,CAEE,OAAA,OAAA,EAAM;AACN,aAAA,SAAA;AACD;AALH,GAAA;;AAQe,WAAA,eAAA,CAAA,GAAA,EAAA,YAAA,EAA4C;AAAA,QAAA,eAAA,GAC/B,KAAK,CAAL,QAAA,CAAe,YAAM;AAC7C,UAAMG,GAAG,GAAGJ,OAAO,CAAnB,GAAmB,CAAnB;;AACA,UAAI,OAAA,GAAA,KAAA,WAAA,IAA8BI,GAAG,KAArC,IAAA,EAAgD;AAC9C,eAAO,OAAA,YAAA,KAAA,UAAA,GAAqCC,YAArC,EAAA,GAAP,YAAA;AACD;;AACD,aAAA,GAAA;AANuD,KAC/B,CAD+B;AAAA,QAClDb,KADkD,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,QAC3CW,QAD2C,GAAA,eAAA,CAAA,CAAA,CAAA;;AASzD,QAAMG,MAAM,GAAG,KAAK,CAAL,WAAA,CACb,UAAA,OAAA,EAAW;AACTH,MAAAA,QAAQ,CAAC,UAAA,GAAA,EAAO;AACd,YAAII,MAAM,GAAV,OAAA;;AAEA,YAAI,OAAA,OAAA,IAAJ,UAAA,EAAkC;AAChCA,UAAAA,MAAM,GAAGC,OAAO,CAAhBD,GAAgB,CAAhBA;AACD;;AACD,YAAI;AACFL,UAAAA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,EAA0BD,IAAI,CAAJA,SAAAA,CAA1BC,MAA0BD,CAA1BC;AADF,SAAA,CAEE,OAAA,QAAA,EAAM,CAAA;;AAER,eAAA,MAAA;AAVFC,OAAQ,CAARA;AAFW,KAAA,EAeb,CAfF,GAeE,CAfa,CAAf;AAkBA,WAAO,CAAA,KAAA,EAAP,MAAO,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCD,MAAMM,YAAY,GAAGC,KAAK,CAA1B,aAAqBA,EAArB;;AAEO,WAAA,aAAA,CAAA,IAAA,EAA2C;AAAA,QAAlBC,KAAkB,GAAA,IAAA,CAAlBA,KAAkB;AAAA,QAARC,IAAQ,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAChD,WAAO,KAAA,CAAA,aAAA,CAAC,YAAD,CAAA,QAAA,EAAA,QAAA,CAAA;AAAuB,MAAA,KAAK,EAAED;AAA9B,KAAA,EAAP,IAAO,CAAA,CAAP;AACD;;AAEM,WAAA,QAAA,GAAoB;AACzB,WAAOD,KAAK,CAALA,UAAAA,CAAP,YAAOA,CAAP;AACD;;ACRc,WAAA,aAAA,CAAA,KAAA,EAA8B;AAC3C;AAD2C,QAAA,eAAA,GAEb,KAAK,CAAL,QAAA,CAC5B,YAAA;AAAA,aAAMK,MAAM,CAANA,UAAAA,IAAqBA,MAAM,CAANA,UAAAA,CAAAA,KAAAA,EAA3B,OAAA;AAHyC,KAEb,CAFa;AAAA,QAEpCF,OAFoC,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,QAE3BC,UAF2B,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;AAO3CJ,IAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,UAAI,CAACK,MAAM,CAAX,UAAA,EAAwB;AACtB;AAFkB,OAAA,CAAA;;;AAMpB,UAAMC,OAAO,GAAGD,MAAM,CAANA,UAAAA,CANI,KAMJA,CAAhB,CANoB,CAAA;;AASpB,UAAME,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAA;AAAA,YAAGxF,OAAH,GAAA,IAAA,CAAA,OAAA;AAAA,eAAiBqF,UAAU,CAA3B,OAA2B,CAA3B;AATG,OASpB,CAToB,CAAA;;;AAYpBE,MAAAA,OAAO,CAAPA,WAAAA,CAAAA,QAAAA;AAEA,aAAO,YAAM;AACX;AACAA,QAAAA,OAAO,CAAPA,cAAAA,CAAAA,QAAAA;AAFF,OAAA;AAdFN,KAAAA,EAkBG,CAAA,OAAA,EAAA,KAAA,EAlBHA,UAkBG,CAlBHA;AAoBA,WAAA,OAAA;AACD;;ACzBM,WAAA,mBAAA,CAAA,KAAA,EAAA,KAAA,EAA2C;AAChD,WAAOQ,KAAK,CAALA,KAAAA,CAAAA,UAAAA,GACHP,KAAK,CADFO,MAAAA,GAEH,CAACA,KAAK,CAALA,SAAAA,CAAD,MAAA,GACAP,KAAK,CADL,IAAA,GAEAO,KAAK,CAALA,KAAAA,CAAAA,OAAAA,GACAP,KAAK,CADLO,OAAAA,GAEAP,KAAK,CANT,OAAA;AAOD;;AAEM,WAAA,mBAAA,CAAA,KAAA,EAAoC;AACzC,WAAOO,KAAK,CAALA,KAAAA,CAAAA,UAAAA,GAAAA,UAAAA,GAEH,CAACA,KAAK,CAALA,SAAAA,CAAD,MAAA,GAAA,UAAA,GAEAA,KAAK,CAALA,KAAAA,CAAAA,OAAAA,GAAAA,OAAAA,GAJJ,OAAA;AAOD;;AAEM,WAAA,MAAA,CAAA,IAAA,EAAA,SAAA,EAAA,OAAA,EAA+C;AAAA,QAAdC,OAAc,KAAA,KAAA,CAAA,EAAA;AAAdA,MAAAA,OAAc,GAAJ,EAAVA;AAAc;;AACpD,WAAO,KAAK,CAAL,UAAA,CAAiB,UAAA,IAAA,EAAA,GAAA,EAA6B;AAAA,UAA1BC,KAA0B,GAAA,IAAA,CAA1BA,KAA0B;AAAA,UAAhBR,IAAgB,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AACnD,UAAMD,KAAK,GAAGU,QAAd,EAAA;AAEA,UAAMC,WAAW,GAAG,MAAM,CAAN,OAAA,CAAA,OAAA,EAAA,MAAA,CAClB,UAAA,OAAA,EAAA,KAAA,EAA2B;AAAA,YAAhB7B,GAAgB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAAXD,KAAW,GAAA,KAAA,CAAA,CAAA,CAAA;AACzB,eAAO+B,aAAa,CAAbA,GAAa,CAAbA,GAAAA,QAAAA,CAAAA,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,EAGG,OAAA,KAAA,KAAA,UAAA,GAA8B/B,KAAK,CAAA,IAAA,EAAnC,KAAmC,CAAnC,GAHH+B,KAAAA,CAAAA,GAAP,OAAA;AAFgB,OAAA,EAApB,EAAoB,CAApB;AAYA,aAAO,KAAK,CAAL,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAELH,QAAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EACC,OAAA,SAAA,KAAA,UAAA,GACAI,SAAS,CAAA,IAAA,EADT,KACS,CADT,GADD,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAFA,WAEA,CAFA;AASLC,QAAAA,GAAG,EAAHA;AATK,OAAA,CAAA,CAAP;AAfF,KAAO,CAAP;AA2BD;;ACnDM,MAAMC,KAAK,GAAGC,MAAM,CAAA,KAAA,EAEzB,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,WAAmB;AACjBC,MAAAA,QAAQ,EADS,MAAA;AAEjBC,MAAAA,OAAO,EAFU,MAAA;AAGjBC,MAAAA,eAAe,EAAEnB,KAAK,CAHL,UAAA;AAIjBoB,MAAAA,KAAK,EAAEpB,KAAK,CAACqB;AAJI,KAAnB;AAFyB,GAAA,EAQzB;AACE,0BAAsB;AACpBJ,MAAAA,QAAQ,EADY,OAAA;AAEpBK,MAAAA,aAAa,EAAE;AAFK;AADxB,GARyB,CAApB;AAgBA,MAAMC,MAAM,GAAGP,MAAM,CAAA,QAAA,EAAW,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,WAAmB;AACxDQ,MAAAA,UAAU,EAD8C,MAAA;AAExDP,MAAAA,QAAQ,EAFgD,OAAA;AAGxDQ,MAAAA,UAAU,EAH8C,MAAA;AAIxDC,MAAAA,UAAU,EAAE1B,KAAK,CAJuC,IAAA;AAKxD2B,MAAAA,MAAM,EALkD,GAAA;AAMxDC,MAAAA,YAAY,EAN4C,OAAA;AAOxDR,MAAAA,KAAK,EAPmD,OAAA;AAQxDS,MAAAA,OAAO,EARiD,OAAA;AASxDC,MAAAA,OAAO,EAAEC,KAAK,CAALA,QAAAA,GAAAA,IAAAA,GAT+C,SAAA;AAUxDC,MAAAA,MAAM,EAAE;AAVgD,KAAnB;AAAhC,GAAqB,CAArB;AAaA,MAAMC,SAAS,GAAGjB,MAAM,CAAA,MAAA,EAAS;AACtCE,IAAAA,OAAO,EAD+B,cAAA;AAEtCD,IAAAA,QAAQ,EAAE;AAF4B,GAAT,CAAxB;AAKA,MAAMiB,QAAQ,GAAGlB,MAAM,CAAA,MAAA,EAAS;AACrCE,IAAAA,OAAO,EAD8B,aAAA;AAErCiB,IAAAA,UAAU,EAF2B,QAAA;AAGrCN,IAAAA,OAAO,EAH8B,aAAA;AAIrCJ,IAAAA,UAAU,EAJ2B,MAAA;AAKrCW,IAAAA,UAAU,EAL2B,gBAAA;AAMrCR,IAAAA,YAAY,EAAE;AANuB,GAAT,CAAvB;AASA,MAAMS,IAAI,GAAGrB,MAAM,CAAA,MAAA,EAAS;AACjCC,IAAAA,QAAQ,EAAE;AADuB,GAAT,CAAnB;AAIA,MAAMqB,KAAK,GAAGtB,MAAM,CAAA,OAAA,EAAU;AACnCW,IAAAA,MAAM,EAD6B,CAAA;AAEnCC,IAAAA,YAAY,EAFuB,OAAA;AAGnCX,IAAAA,QAAQ,EAH2B,OAAA;AAInCY,IAAAA,OAAO,EAAE;AAJ0B,GAAV,CAApB;AAOA,MAAMU,MAAM,GAAGvB,MAAM,CAAA,QAAA,EAAW;AACrCE,IAAAA,OAAO,EAD8B,cAAA;AAErCD,IAAAA,QAAQ,EAF6B,OAAA;AAGrCuB,IAAAA,UAAU,EAH2B,YAAA;AAIrCf,IAAAA,UAAU,EAJ2B,QAAA;AAKrCgB,IAAAA,UAAU,EAL2B,KAAA;AAMrCZ,IAAAA,OAAO,EAN8B,0BAAA;AAOrCa,IAAAA,MAAM,EAP+B,MAAA;AAQrCf,IAAAA,MAAM,EAR+B,CAAA;AASrCC,IAAAA,YAAY,EATyB,OAAA;AAUrCJ,IAAAA,UAAU,EAV2B,MAAA;AAWrCmB,IAAAA,gBAAgB,EAXqB,MAAA;AAYrCxB,IAAAA,eAAe,EAZsB,MAAA;AAarCyB,IAAAA,eAAe,EAbsB,gKAAA;AAcrCC,IAAAA,gBAAgB,EAdqB,WAAA;AAerCC,IAAAA,kBAAkB,EAfmB,qBAAA;AAgBrCC,IAAAA,cAAc,EAAA;AAhBuB,GAAX,CAArB;ACpDA,MAAMC,KAAK,GAAGhC,MAAM,CAAA,KAAA,EAAQ;AACjCwB,IAAAA,UAAU,EADuB,kBAAA;AAEjCvB,IAAAA,QAAQ,EAFyB,QAAA;AAGjCwB,IAAAA,UAAU,EAHuB,KAAA;AAIjCQ,IAAAA,OAAO,EAAE;AAJwB,GAAR,CAApB;AAOA,MAAMC,KAAK,GAAGlC,MAAM,CAAA,MAAA,EAAS;AAClCgB,IAAAA,MAAM,EAD4B,SAAA;AAElCZ,IAAAA,KAAK,EAAE;AAF2B,GAAT,CAApB;AAKA,MAAM+B,KAAK,GAAGnC,MAAM,CAAA,MAAA,EAAS,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,WAAmB;AACrDI,MAAAA,KAAK,EAAEpB,KAAK,CAACoD;AADwC,KAAnB;AAA7B,GAAoB,CAApB;AAIA,MAAMC,UAAU,GAAGrC,MAAM,CAAA,KAAA,EAAQ;AACtCsC,IAAAA,UAAU,EAD4B,OAAA;AAEtCC,IAAAA,WAAW,EAF2B,MAAA;AAGtCC,IAAAA,UAAU,EAAE;AAH0B,GAAR,CAAzB;AAMA,MAAMC,IAAI,GAAGzC,MAAM,CAAA,MAAA,EAAS;AACjCI,IAAAA,KAAK,EAD4B,MAAA;AAEjCH,IAAAA,QAAQ,EAAE;AAFuB,GAAT,CAAnB;;AAKA,MAAMyC,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAA;AAAA,QAAGC,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,QAAA,UAAA,GAAA,IAAA,CAAA,KAAA;AAAA,QAAalD,KAAb,GAAA,UAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,UAAA;AAAA,QAA4BR,IAA5B,GAAA,6BAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,WACtB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,KAAK,EAAA,QAAA,CAAA;AACHiB,QAAAA,OAAO,EADJ,cAAA;AAEH0C,QAAAA,UAAU,EAFP,cAAA;AAGHC,QAAAA,SAAS,EAAA,aAAYF,QAAQ,GAAA,EAAA,GAApB,CAAA,IAAA,OAAA,IAAqClD,KAAK,CAALA,SAAAA,IAArC,EAAA;AAHN,OAAA,EAAA,KAAA;AADP,KAAA,EADsB,QACtB,CADsB;AAAjB,GAAA;;AAaP,MAAMqD,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAWlB;AAAA,QAVJC,WAUI,GAAA,KAAA,CAVJA,WAUI;AAAA,QATJC,KASI,GAAA,KAAA,CATJA,KASI;AAAA,QARJnF,KAQI,GAAA,KAAA,CARJA,KAQI;AAAA,QANJoF,UAMI,GAAA,KAAA,CANJA,UAMI;AAAA,QALJC,aAKI,GAAA,KAAA,CALJA,aAKI;AAAA,QAHJP,QAGI,GAAA,KAAA,CAHJA,QAGI;AAAA,QAFJQ,MAEI,GAAA,KAAA,CAFJA,MAEI;AAAA,QADJC,QACI,GAAA,KAAA,CADJA,QACI;;AAAA,QAAA,eAAA,GACsCrE,KAAK,CAALA,QAAAA,CADtC,EACsCA,CADtC;AAAA,QACGsE,aADH,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,QACkBC,gBADlB,GAAA,eAAA,CAAA,CAAA,CAAA;;AAGJ,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,MAAA,GAAG,EAAEN;AAAZ,KAAA,EACG,CAAA,aAAa,IAAb,IAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAb,MAAA,IACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,eAAMG,MAAN,EAAA;AAAA;AAAhB,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,MAAA,QAAQ,EAAER;AAApB,KAAA,CADF,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAEE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAOM,UAAU,CAAjB,MAAA,EAHJ,QAGI,CAFF,CADF,EAKGN,QAAQ,GACP,aAAa,CAAb,MAAA,KAAA,CAAA,GACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,IAAA,EACG,UAAU,CAAV,GAAA,CAAe,UAAA,KAAA,EAAK;AAAA,aAAII,WAAW,CAAf,KAAe,CAAf;AAFzB,KAEK,CADH,CADF,GAKE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,IAAA,EACG,aAAa,CAAb,GAAA,CAAkB,UAAA,OAAA,EAAA,KAAA,EAAA;AAAA,aACjB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAEhJ;AAAV,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,iBACPuJ,gBAAgB,CAAC,UAAA,GAAA,EAAG;AAAA,mBAClB,GAAG,CAAH,QAAA,CAAA,KAAA,IACI,GAAG,CAAH,MAAA,CAAW,UAAA,CAAA,EAAC;AAAA,qBAAIC,CAAC,KAAL,KAAA;AADhB,aACI,CADJ,GAAA,GAAA,MAAA,CAAA,GAAA,EAAA,CADkB,KAClB,CAAA,CADkB;AADb,WACS,CADT;AAAA;AADX,OAAA,EASE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,QAAA,QAAQ,EAAEZ;AAApB,OAAA,CATF,EAAA,IAAA,EASqC5I,KAAK,GAT1C,QAAA,EAAA,MAAA,EAAA,GAAA,EAUGA,KAAK,GAALA,QAAAA,GAAAA,QAAAA,GAVH,CAAA,EADF,GACE,CADF,EAaG,aAAa,CAAb,QAAA,CAAA,KAAA,IACC,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,IAAA,EACG,OAAO,CAAP,GAAA,CAAY,UAAA,KAAA,EAAK;AAAA,eAAIgJ,WAAW,CAAf,KAAe,CAAf;AAFrB,OAEI,CADH,CADD,GAfY,IAEf,CADF,CADiB;AAPhB,KAOF,CADH,CANK,GANZ,IACC,CADD,GAyCC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EADF,GACE,CADF,EAAA,GAAA,EAC0B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAQzE,IAAI,CAAJA,SAAAA,CA5CxC,KA4CwCA,CAAR,CAD1B,CA1CJ,CADF;AAdF,GAAA;;AAiEe,WAAA,QAAA,CAAA,KAAA,EAMZ;AAAA,QALDT,KAKC,GAAA,KAAA,CALDA,KAKC;AAAA,QAJD2F,eAIC,GAAA,KAAA,CAJDA,eAIC;AAAA,QAAA,cAAA,GAAA,KAAA,CAHDC,QAGC;AAAA,QAHDA,QAGC,GAAA,cAAA,KAAA,KAAA,CAAA,GAHUX,eAGV,GAAA,cAAA;AAAA,QAAA,cAAA,GAAA,KAAA,CAFDM,QAEC;AAAA,QAFDA,QAEC,GAAA,cAAA,KAAA,KAAA,CAAA,GAFU,GAEV,GAAA,cAAA;AAAA,QADEnE,IACF,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,CAAA,CAAA;;AAAA,QAAA,gBAAA,GAC+BF,KAAK,CAALA,QAAAA,CAD/B,eAC+BA,CAD/B;AAAA,QACM4D,QADN,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,QACgBe,WADhB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAGD,QAAMP,MAAM,GAAG,SAATA,MAAS,CAAA,GAAA,EAAO;AACpBO,MAAAA,WAAW,CAAC,UAAA,GAAA,EAAG;AAAA,eAAK,OAAA,GAAA,KAAA,WAAA,GAAA,GAAA,GAAmC,CAAxC,GAAA;AAAfA,OAAW,CAAXA;AADF,KAAA;;AAIA,QAAMC,IAAI,GAAV,EAAA;AACA,QAAMC,KAAK,GAAX,CAAA;AAEA,QAAIC,IAAI,GAAG,OAAX,KAAA;AACA,QAAA,UAAA;AACA,QAAIX,aAAa,GAAjB,EAAA;;AAEA,QAAMY,YAAY,GAAG,SAAfA,YAAe,CAAA,GAAA,EAAO;AAAA,UAAA,KAAA;;AAC1B,UAAMC,OAAO,GAAGJ,IAAI,CAAJA,MAAAA,CAAYK,GAAG,CAA/B,KAAgBL,CAAhB;AACA,UAAMM,kBAAkB,GACtBT,eAAe,KAAfA,IAAAA,IAAAA,KAAAA,GAAAA,EAAAA,EAAAA,KAAAA,CACOQ,GAAG,CADVR,KAAAA,CAAAA,GAAAA,IAAAA,EAAAA,KAAAA,IAEIA,eAFJA,IAAAA,IAEIA,GAFJA,KAAAA,CAEIA,GAAAA,eAAe,CAAGQ,GAAG,CAH3B,KAGqB,CAHrB;AAIA,aAAA,QAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAEEL,QAAAA,IAAI,EAFN,OAAA;AAGEC,QAAAA,KAAK,EAAEA,KAAK,GAHd,CAAA;AAIEJ,QAAAA,eAAe,EAAES;AAJnB,OAAA,CAAA;AANF,KAAA;;AAcA,QAAIC,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;AACxBL,MAAAA,IAAI,GAAJA,OAAAA;AACAZ,MAAAA,UAAU,GAAG,KAAK,CAAL,GAAA,CAAU,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,eACrBa,YAAY,CAAC;AACXd,UAAAA,KAAK,EADM,CAAA;AAEXnF,UAAAA,KAAK,EAAE0F;AAFI,SAAD,CADS;AAAvBN,OAAa,CAAbA;AAFF,KAAA,MAQO,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BpF,KAAK,KAAtC,IAAA,EAAiD;AACtDgG,MAAAA,IAAI,GAAJA,QAAAA;AACAZ,MAAAA,UAAU,GAAG,MAAM,CAAN,OAAA,CAAA,KAAA,EAAA,GAAA,CAA0B,UAAA,KAAA,EAAA;AAAA,YAAED,KAAF,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAASnF,KAAT,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,eACrCiG,YAAY,CAAC;AACXd,UAAAA,KAAK,EADM,KAAA;AAEXnF,UAAAA,KAAK,EAALA;AAFW,SAAD,CADyB;AAAvCoF,OAAa,CAAbA;AAMD;;AAED,QAAA,UAAA,EAAgB;AACd,UAAIjM,CAAC,GAAL,CAAA;;AAEA,aAAOA,CAAC,GAAGiM,UAAU,CAArB,MAAA,EAA8B;AAC5BC,QAAAA,aAAa,CAAbA,IAAAA,CAAmBD,UAAU,CAAVA,KAAAA,CAAAA,CAAAA,EAAoBjM,CAAC,GAAxCkM,QAAmBD,CAAnBC;AACAlM,QAAAA,CAAC,GAAGA,CAAC,GAALA,QAAAA;AACD;AACF;;AAED,WAAOyM,QAAQ,CAAA,QAAA,CAAA;AACbV,MAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,KAAA,EAAK;AAAA,eAChB,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AAAU,UAAA,GAAG,EAAEoB,KAAK,CAApB,KAAA;AAA4B,UAAA,QAAQ,EAAEV;AAAtC,SAAA,EAAA,IAAA,EADgB,KAChB,CAAA,CADgB;AADL,OAAA;AAIbI,MAAAA,IAAI,EAJS,IAAA;AAKbZ,MAAAA,UAAU,EALG,UAAA;AAMbC,MAAAA,aAAa,EANA,aAAA;AAObU,MAAAA,KAAK,EAPQ,KAAA;AAQb/F,MAAAA,KAAK,EARQ,KAAA;AASb8F,MAAAA,IAAI,EATS,IAAA;AAUbhB,MAAAA,QAAQ,EAVK,QAAA;AAWbQ,MAAAA,MAAM,EAXO,MAAA;AAYbC,MAAAA,QAAQ,EAARA;AAZa,KAAA,EAAf,IAAe,CAAA,CAAf;AAeD;;ACpKD,MAAMgB,QAAQ,GAAG,OAAA,MAAA,KAAjB,WAAA;AAEA,MAAMpF,KAAK,GAAG;AACZ0B,IAAAA,UAAU,EADE,SAAA;AAEZ2D,IAAAA,aAAa,EAFD,SAAA;AAGZhE,IAAAA,UAAU,EAHE,OAAA;AAIZiE,IAAAA,IAAI,EAJQ,SAAA;AAKZC,IAAAA,OAAO,EALK,SAAA;AAMZC,IAAAA,OAAO,EANK,SAAA;AAOZpC,IAAAA,MAAM,EAPM,SAAA;AAQZqC,IAAAA,MAAM,EARM,SAAA;AASZC,IAAAA,OAAO,EAAE;AATG,GAAd;;AAYO,WAAA,kBAAA,CAAA,IAAA,EAKJ;AAAA,QAJDC,aAIC,GAAA,IAAA,CAJDA,aAIC;AAAA,QAAA,eAAA,GAAA,IAAA,CAHDC,UAGC;AAAA,QAHDA,UAGC,GAAA,eAAA,KAAA,KAAA,CAAA,GAHY,EAGZ,GAAA,eAAA;AAAA,QAAA,qBAAA,GAAA,IAAA,CAFDC,gBAEC;AAAA,QAFDA,gBAEC,GAAA,qBAAA,KAAA,KAAA,CAAA,GAFkB,EAElB,GAAA,qBAAA;AAAA,QAAA,qBAAA,GAAA,IAAA,CADDC,iBACC;AAAA,QADDA,iBACC,GAAA,qBAAA,KAAA,KAAA,CAAA,GADmB,EACnB,GAAA,qBAAA;AACD,QAAMC,OAAO,GAAGhG,KAAK,CAArB,MAAgBA,EAAhB;AACA,QAAMiG,QAAQ,GAAGjG,KAAK,CAAtB,MAAiBA,EAAjB;;AAFC,QAAA,gBAAA,GAG2BoG,eAAe,CAAA,wBAAA,EAH1C,aAG0C,CAH1C;AAAA,QAGMF,MAHN,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,QAGcC,SAHd,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAAA,QAAA,eAAA,GAO2CnG,KAAK,CAALA,QAAAA,CAP3C,KAO2CA,CAP3C;AAAA,QAOMqG,cAPN,GAAA,eAAA,CAAA,CAAA,CAAA;AAAA,QAOsBC,iBAPtB,GAAA,eAAA,CAAA,CAAA,CAAA;;AASDtG,IAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBsG,MAAAA,iBAAiB,CAAjBA,MAAiB,CAAjBA;AADFtG,KAAAA,EAEG,CAAA,MAAA,EAFHA,cAEG,CAFHA;AAIAA,IAAAA,KAAK,CAACqF,QAAQ,GAAA,WAAA,GAAdrF,iBAAK,CAALA,CAAkD,YAAM;AACtD,UAAA,cAAA,EAAoB;AAAA,YAAA,gBAAA;;AAClB,YAAMuG,aAAa,GAAA,CAAA,gBAAA,GAAGP,OAAO,CAAV,OAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,gBAAAA,CAAAA,aAAAA,CAAAA,KAAAA,CAAtB,aAAA;;AAEA,YAAMQ,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,cAAA,iBAAA;;AAChB,cAAMC,eAAe,GAAA,CAAA,iBAAA,GAAGR,QAAQ,CAAX,OAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,iBAAAA,CAAAA,qBAAAA,GAAxB,MAAA;AACAD,UAAAA,OAAO,CAAPA,OAAAA,CAAAA,aAAAA,CAAAA,KAAAA,CAAAA,aAAAA,GAAuDS,eAAvDT,GAAAA,IAAAA;AAFF,SAAA;;AAKAQ,QAAAA,GAAG;AAEHnG,QAAAA,MAAM,CAANA,gBAAAA,CAAAA,QAAAA,EAAAA,GAAAA;AAEA,eAAO,YAAM;AACXA,UAAAA,MAAM,CAANA,mBAAAA,CAAAA,QAAAA,EAAAA,GAAAA;AACA2F,UAAAA,OAAO,CAAPA,OAAAA,CAAAA,aAAAA,CAAAA,KAAAA,CAAAA,aAAAA,GAAAA,aAAAA;AAFF,SAAA;AAID;AAjBHhG,KAAAA,EAkBG,CAlBHA,cAkBG,CAlBHA;;AAbC,QAAA,iBAAA,GAiCsD6F,UAjCtD,CAAA,KAAA;AAAA,QAiCca,UAjCd,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,iBAAA;AAAA,QAiCkCC,eAjClC,GAAA,6BAAA,CAAA,UAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAAA,QAAA,qBAAA,GAsCGb,gBAtCH,CAAA,KAAA;AAAA,QAmCQc,gBAnCR,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,QAoCUC,YApCV,GAsCGf,gBAtCH,CAAA,OAAA;AAAA,QAqCIgB,qBArCJ,GAAA,6BAAA,CAAA,gBAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA;;AAAA,QAAA,qBAAA,GA2CGf,iBA3CH,CAAA,KAAA;AAAA,QAwCQgB,iBAxCR,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,QAyCUC,aAzCV,GA2CGjB,iBA3CH,CAAA,OAAA;AAAA,QA0CIkB,sBA1CJ,GAAA,6BAAA,CAAA,iBAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA;;AA6CD,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAR,OAAA;AAAmB,MAAA,SAAS,EAAC;AAA7B,KAAA,EACGZ,cAAc,GACb,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,MAAA,KAAK,EAAEpG;AAAtB,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,QAAA,CAAA;AACE,MAAA,GAAG,EAAEgG;AADP,KAAA,EAAA,eAAA,EAAA;AAGE,MAAA,KAAK,EAAA,QAAA,CAAA;AACHiB,QAAAA,QAAQ,EADL,OAAA;AAEHC,QAAAA,MAAM,EAFH,GAAA;AAGHC,QAAAA,KAAK,EAHF,GAAA;AAIHC,QAAAA,MAAM,EAJH,OAAA;AAKHC,QAAAA,KAAK,EALF,MAAA;AAMH3E,QAAAA,MAAM,EANH,OAAA;AAOH4E,QAAAA,SAAS,EAPN,KAAA;AAQHC,QAAAA,SAAS,EARN,yBAAA;AASHC,QAAAA,SAAS,EAAA,eAAexH,KAAK,CAACsF;AAT3B,OAAA,EAAA,UAAA;AAHP,KAAA,CAAA,CADF,EAiBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,qBAAA,EAAA;AAEE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACbY,QAAAA,SAAS,CAATA,KAAS,CAATA;AACAU,QAAAA,YAAY,IAAIA,YAAhBA,EAAAA;AAJJ,OAAA;AAME,MAAA,KAAK,EAAA,QAAA,CAAA;AACHK,QAAAA,QAAQ,EADL,OAAA;AAEHC,QAAAA,MAAM,EAFH,GAAA;AAGHC,QAAAA,KAAK,EAHF,GAAA;AAIHC,QAAAA,MAAM,EAJH,OAAA;AAKHK,QAAAA,MAAM,EAAE;AALL,OAAA,EAAA,gBAAA;AANP,KAAA,CAAA,EAlBW,OAkBX,CAjBF,CADa,GAqCb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,sBAAA,EAAA;AAEE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACbvB,QAAAA,SAAS,CAATA,IAAS,CAATA;AACAa,QAAAA,aAAa,IAAIA,aAAjBA,EAAAA;AAJJ,OAAA;AAME,MAAA,KAAK,EAAA,QAAA,CAAA;AACHE,QAAAA,QAAQ,EADL,OAAA;AAEHC,QAAAA,MAAM,EAFH,GAAA;AAGHC,QAAAA,KAAK,EAHF,GAAA;AAIHC,QAAAA,MAAM,EAJH,OAAA;AAKHlG,QAAAA,OAAO,EALJ,cAAA;AAMHD,QAAAA,QAAQ,EANL,QAAA;AAOHwG,QAAAA,MAAM,EAPH,OAAA;AAQHzF,QAAAA,MAAM,EARH,SAAA;AASHI,QAAAA,UAAU,EAAE;AATT,OAAA,EAAA,iBAAA;AANP,KAAA,CAAA,EAmBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EA1DR,cA0DQ,CAnBF,CAtCJ,CADF;AA+DD;;AAED,MAAMsF,aAAa,GAAG,SAAhBA,aAAgB,CAAA,CAAA,EAAC;AAAA,WACrBC,CAAC,CAADA,KAAAA,CAAAA,UAAAA,GAAAA,CAAAA,GAAyB,CAACA,CAAC,CAADA,SAAAA,CAAD,MAAA,GAAA,CAAA,GAA0BA,CAAC,CAADA,KAAAA,CAAAA,OAAAA,GAAAA,CAAAA,GAD9B,CAAA;AAAvB,GAAA;;AAGA,MAAMC,OAAO,GAAG;AACd,6BAAyB,SAAA,iBAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,aACvBF,aAAa,CAAbA,CAAa,CAAbA,KAAqBA,aAAa,CAAlCA,CAAkC,CAAlCA,GACIE,OAAO,CAAPA,cAAO,CAAPA,CAAAA,CAAAA,EADJF,CACIE,CADJF,GAEIA,aAAa,CAAbA,CAAa,CAAbA,GAAmBA,aAAa,CAAhCA,CAAgC,CAAhCA,GAAAA,CAAAA,GAEA,CALmB,CAAA;AADX,KAAA;AAOd,kBAAc,SAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,aAAWvJ,CAAC,CAADA,SAAAA,GAAcI,CAAC,CAAfJ,SAAAA,GAAAA,CAAAA,GAAgC,CAA3C,CAAA;AAPA,KAAA;AAQd,oBAAgB,SAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,aAAWA,CAAC,CAADA,KAAAA,CAAAA,SAAAA,GAAoBI,CAAC,CAADA,KAAAA,CAApBJ,SAAAA,GAAAA,CAAAA,GAA4C,CAAvD,CAAA;AAAA;AARF,GAAhB;AAWA,MAAa0J,uBAAuB,GAAG,KAAK,CAAL,UAAA,CACrC,SAAA,uBAAA,CAAA,KAAA,EAAA,GAAA,EAA6C;AAAA,QAAA,iBAAA,GACnB1B,eAAe,CAAA,0BAAA,EAErCpO,MAAM,CAANA,IAAAA,CAAAA,OAAAA,EAHyC,CAGzCA,CAFqC,CADI;AAAA,QACpC+P,IADoC,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,QAC9BC,OAD8B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAAA,QAAA,iBAAA,GAMf5B,eAAe,CAAA,0BAAA,EANA,EAMA,CANA;AAAA,QAMpC6B,MANoC,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,QAM5BC,SAN4B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAAA,QAAA,iBAAA,GAQX9B,eAAe,CAAA,4BAAA,EARJ,KAQI,CARJ;AAAA,QAQpC+B,QARoC,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,QAQ1BC,WAR0B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAa3C,QAAMC,MAAM,GAAG,KAAK,CAAL,OAAA,CAAc,YAAA;AAAA,aAAMR,OAAO,CAAb,IAAa,CAAb;AAAd,KAAA,EAAmC,CAAlD,IAAkD,CAAnC,CAAf;AAEA7H,IAAAA,KAAK,CAACqF,QAAQ,GAAA,WAAA,GAAdrF,iBAAK,CAALA,CAAkD,YAAM;AACtD,UAAI,CAAJ,MAAA,EAAa;AACXgI,QAAAA,OAAO,CAAChQ,MAAM,CAANA,IAAAA,CAAAA,OAAAA,EAARgQ,CAAQhQ,CAAD,CAAPgQ;AACD;AAHHhI,KAAAA,EAIG,CAAA,OAAA,EAJHA,MAIG,CAJHA;;AAf2C,QAAA,gBAAA,GAqBGA,KAAK,CAALA,QAAAA,CAC5ChI,MAAM,CAANA,MAAAA,CAAcwQ,UAAAA,CAAAA,UAAAA,CAtB2B,OAsBzCxQ,CAD4CgI,CArBH;AAAA,QAqBpCsI,eArBoC,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,QAqBnBC,kBArBmB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAAA,QAAA,gBAAA,GAyBGvI,KAAK,CAALA,QAAAA,CAzBH,IAyBGA,CAzBH;AAAA,QAyBpCyI,eAzBoC,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,QAyBnBC,kBAzBmB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AA2B3C,QAAMjI,OAAO,GAAG,KAAK,CAAL,OAAA,CAAc,YAAM;AAClC,UAAMkI,MAAM,GAAG,GAAA,MAAA,CAAA,eAAA,EAAA,IAAA,CAAf,MAAe,CAAf;;AAEA,UAAA,QAAA,EAAc;AACZA,QAAAA,MAAM,CAANA,OAAAA;AACD;;AAED,aAAOC,WAAK,CAAA,MAAA,EAAA,MAAA,EAAiB;AAAE3O,QAAAA,IAAI,EAAE,CAAA,WAAA;AAAR,OAAjB,CAAZ;AAPc,KAAA,EAQb,CAAA,QAAA,EAAA,MAAA,EAAA,eAAA,EARH,MAQG,CARa,CAAhB;;AA3B2C,QAAA,cAAA,GAqCJ,KAAK,CAAL,OAAA,CAAc,YAAM;AACzD,UAAM4O,WAAW,GAAG,OAAO,CAAP,IAAA,CAClB,UAAA,KAAA,EAAK;AAAA,eAAIrI,KAAK,CAALA,SAAAA,KAAJ,eAAA;AADP,OAAoB,CAApB;AAIA,aAAO,CAAA,WAAA,EAELqI,WAAW,GAAGtJ,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,SAAAA,CAAd,WAAcA,CAAXA,CAAH,GAFb,IAAO,CAAP;AALqC,KAAA,EASpC,CAAA,eAAA,EA9CwC,OA8CxC,CAToC,CArCI;AAAA,QAqCpCsJ,WArCoC,GAAA,cAAA,CAAA,CAAA,CAAA;AAAA,QAqCvBC,eArCuB,GAAA,cAAA,CAAA,CAAA,CAAA;;AAgD3C,QAAMC,QAAQ,GAAG,OAAO,CAAP,MAAA,CAAe,UAAA,CAAA,EAAC;AAAA,aAAIC,mBAAmB,CAAnBA,CAAmB,CAAnBA,KAAJ,OAAA;AAAhB,KAAA,EAAjB,MAAA;AAEA,QAAMC,WAAW,GAAG,OAAO,CAAP,MAAA,CAClB,UAAA,CAAA,EAAC;AAAA,aAAID,mBAAmB,CAAnBA,CAAmB,CAAnBA,KAAJ,UAAA;AADiB,KAAA,EAApB,MAAA;AAGA,QAAME,QAAQ,GAAG,OAAO,CAAP,MAAA,CAAe,UAAA,CAAA,EAAC;AAAA,aAAIF,mBAAmB,CAAnBA,CAAmB,CAAnBA,KAAJ,OAAA;AAAhB,KAAA,EAAjB,MAAA;AAEA,QAAMG,WAAW,GAAG,OAAO,CAAP,MAAA,CAClB,UAAA,CAAA,EAAC;AAAA,aAAIH,mBAAmB,CAAnBA,CAAmB,CAAnBA,KAAJ,UAAA;AADiB,KAAA,EAApB,MAAA;AAIAhJ,IAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,aAAO,UAAA,CAAA,UAAA,CAAA,SAAA,CAAqB,UAAA,UAAA,EAAc;AACxCuI,QAAAA,kBAAkB,CAACvQ,MAAM,CAANA,MAAAA,CAAcwQ,UAAU,CAA3CD,OAAmBvQ,CAAD,CAAlBuQ;AADF,OAAO,CAAP;AADFvI,KAAAA,EAIG,CAAA,IAAA,EAAA,MAAA,EAJHA,QAIG,CAJHA;AAMAA,IAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,UAAIyI,eAAe,IAAI,CAAvB,WAAA,EAAqC;AACnCC,QAAAA,kBAAkB,CAAlBA,IAAkB,CAAlBA;AACD;AAHH1I,KAAAA,EAIG,CAAA,WAAA,EAJHA,eAIG,CAJHA;AAMA,WACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,MAAA,KAAK,EAAEC;AAAtB,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAO,MAAA,GAAG,EAAV,GAAA;AAAiB,MAAA,SAAS,EAAC;AAA3B,KAAA,EAAA,KAAA,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLmJ,QAAAA,IAAI,EADC,SAAA;AAELC,QAAAA,SAAS,EAFJ,KAAA;AAGLC,QAAAA,QAAQ,EAHH,MAAA;AAILC,QAAAA,WAAW,EAAA,eAAetJ,KAAK,CAJ1B,OAAA;AAKLkB,QAAAA,OAAO,EALF,MAAA;AAMLI,QAAAA,aAAa,EAAE;AANV;AADT,KAAA,EAUE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLO,QAAAA,OAAO,EADF,OAAA;AAELH,QAAAA,UAAU,EAAE1B,KAAK,CAFZ,aAAA;AAGLkB,QAAAA,OAAO,EAHF,MAAA;AAILqI,QAAAA,cAAc,EAJT,eAAA;AAKLpH,QAAAA,UAAU,EAAE;AALP;AADT,KAAA,EASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLlB,QAAAA,QAAQ,EADH,QAAA;AAELC,QAAAA,OAAO,EAFF,MAAA;AAGLI,QAAAA,aAAa,EAAE;AAHV;AADT,KAAA,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLkI,QAAAA,YAAY,EADP,OAAA;AAEL1H,QAAAA,OAAO,EAAE;AAFJ;AADT,KAAA,EAAA,uBAAA,EAMuB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAS2H,GAAG,CAbrC,OAayB,CANvB,CAPF,EAeE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLhI,QAAAA,UAAU,EAAE;AADP;AADT,KAAA,EAAA,WAAA,EAKYjB,OAAO,CALnB,MAAA,EAxBJ,GAwBI,CAfF,CATF,EAgCE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,OAAO,EADF,MAAA;AAELI,QAAAA,aAAa,EAAE;AAFV;AADT,KAAA,EAME,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,MAAA,KAAK,EAAE;AAAEkI,QAAAA,YAAY,EAAE;AAAhB;AAAlB,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL9H,QAAAA,UAAU,EAAE1B,KAAK,CADZ,OAAA;AAEL8B,QAAAA,OAAO,EAAEgH,QAAQ,GAAA,CAAA,GAAO;AAFnB;AADT,KAAA,EAAA,QAAA,EAMQ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAPV,GAOU,CANR,CADF,EAAA,GAAA,EASE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLpH,QAAAA,UAAU,EAAE1B,KAAK,CADZ,MAAA;AAEL8B,QAAAA,OAAO,EAAEkH,WAAW,GAAA,CAAA,GAAO;AAFtB;AADT,KAAA,EAAA,WAAA,EAMW,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,WAAA,EAfb,GAea,CANX,CATF,EAAA,GAAA,EAiBE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLtH,QAAAA,UAAU,EAAE1B,KAAK,CADZ,OAAA;AAELoB,QAAAA,KAAK,EAFA,OAAA;AAGLgB,QAAAA,UAAU,EAHL,GAAA;AAILN,QAAAA,OAAO,EAAEmH,QAAQ,GAAA,CAAA,GAAO;AAJnB;AADT,KAAA,EAAA,QAAA,EAQQ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAzBV,GAyBU,CARR,CAjBF,EAAA,GAAA,EA2BE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLvH,QAAAA,UAAU,EAAE1B,KAAK,CADZ,IAAA;AAEL8B,QAAAA,OAAO,EAAEoH,WAAW,GAAA,CAAA,GAAO;AAFtB;AADT,KAAA,EAAA,WAAA,EAMW,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,WAAA,EAvCf,GAuCe,CANX,CA3BF,CANF,EA0CE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLhI,QAAAA,OAAO,EADF,MAAA;AAELiB,QAAAA,UAAU,EAAE;AAFP;AADT,KAAA,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,WAAW,EADb,QAAA;AAEE,MAAA,KAAK,EAFP,MAAA;AAGE,MAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,CAAA,EAAC;AAAA,eAAI8F,SAAS,CAACyB,CAAC,CAADA,MAAAA,CAAd,KAAa,CAAb;AAHb,OAAA;AAIE,MAAA,SAAS,EAAE,SAAA,SAAA,CAAA,CAAA,EAAK;AACd,YAAIA,CAAC,CAADA,GAAAA,KAAJ,QAAA,EAAwBzB,SAAS,CAATA,EAAS,CAATA;AAL5B,OAAA;AAOE,MAAA,KAAK,EAAE;AACLkB,QAAAA,IAAI,EADC,GAAA;AAELQ,QAAAA,WAAW,EAAE;AAFR;AAPT,KAAA,CANF,EAkBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,KAAK,EADP,IAAA;AAEE,MAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,CAAA,EAAC;AAAA,eAAI5B,OAAO,CAAC2B,CAAC,CAADA,MAAAA,CAAZ,KAAW,CAAX;AAFb,OAAA;AAGE,MAAA,KAAK,EAAE;AACLP,QAAAA,IAAI,EADC,GAAA;AAELQ,QAAAA,WAAW,EAAE;AAFR;AAHT,KAAA,EAQG,MAAM,CAAN,IAAA,CAAA,OAAA,EAAA,GAAA,CAAyB,UAAA,GAAA,EAAG;AAAA,aAC3B,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,QAAA,GAAG,EAAX,GAAA;AAAkB,QAAA,KAAK,EAAE7K;AAAzB,OAAA,EAAA,UAAA,EAD2B,GAC3B,CAD2B;AA1BjC,KA0BK,CARH,CAlBF,EAgCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,eAAMqJ,WAAW,CAAC,UAAA,GAAA,EAAG;AAAA,iBAAI,CAAJ,GAAA;AAArB,SAAiB,CAAjB;AADX,OAAA;AAEE,MAAA,KAAK,EAAE;AACLtG,QAAAA,OAAO,EAAE;AADJ;AAFT,KAAA,EAMGqG,QAAQ,GAAA,QAAA,GA1HnB,OAoHQ,CAhCF,CA1CF,CAhCF,CAVF,EA+HE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLmB,QAAAA,QAAQ,EAAE;AADL;AADT,KAAA,EAKG,OAAO,CAAP,GAAA,CAAY,UAAA,KAAA,EAAK;AAAA,aAChB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,GAAG,EAAE9I,KAAK,CADZ,SAAA;AAEE,QAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,iBAAMkI,kBAAkB,CAAClI,KAAK,CAA9B,SAAwB,CAAxB;AAFX,SAAA;AAGE,QAAA,KAAK,EAAE;AACLW,UAAAA,OAAO,EADF,MAAA;AAEL0I,UAAAA,YAAY,EAAA,eAAe5J,KAAK,CAF3B,OAAA;AAGLgC,UAAAA,MAAM,EAHD,SAAA;AAILN,UAAAA,UAAU,EACRnB,KAAK,KAALA,WAAAA,GAAAA,sBAAAA,GAEIsJ;AAPD;AAHT,OAAA,EAaE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,KAAK,EAAE;AACLV,UAAAA,IAAI,EADC,UAAA;AAEL9B,UAAAA,KAAK,EAFA,MAAA;AAGL3E,UAAAA,MAAM,EAHD,MAAA;AAILhB,UAAAA,UAAU,EAAEoI,mBAAmB,CAAA,KAAA,EAJ1B,KAI0B,CAJ1B;AAKL5I,UAAAA,OAAO,EALF,MAAA;AAMLiB,UAAAA,UAAU,EANL,QAAA;AAOLoH,UAAAA,cAAc,EAPT,QAAA;AAQL9H,UAAAA,UAAU,EARL,MAAA;AASLW,UAAAA,UAAU,EACR2G,mBAAmB,CAAnBA,KAAmB,CAAnBA,KAAAA,OAAAA,GAAAA,GAAAA,GAVG,gBAAA;AAaL3H,UAAAA,KAAK,EACH2H,mBAAmB,CAAnBA,KAAmB,CAAnBA,KAAAA,OAAAA,GAAAA,OAAAA,GAEI;AAhBD;AADT,OAAA,EAoBGxI,KAAK,CAALA,SAAAA,CAjCL,MAaE,CAbF,EAmCE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,QAAA,KAAK,EAAE;AACLsB,UAAAA,OAAO,EAAE;AADJ;AADT,OAAA,EAKGtB,KAAK,CAzCM,SAoCd,CAnCF,CADgB;AArIxB,KAqIO,CALH,CA/HF,CADF,EAoLE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL4I,QAAAA,IAAI,EADC,SAAA;AAELjI,QAAAA,OAAO,EAFF,MAAA;AAGLI,QAAAA,aAAa,EAHR,QAAA;AAIL+H,QAAAA,QAAQ,EAAE;AAJL;AADT,KAAA,EAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLxH,QAAAA,OAAO,EADF,OAAA;AAELH,QAAAA,UAAU,EAAE1B,KAAK,CAACqF;AAFb;AADT,KAAA,EARF,eAQE,CARF,EAgBGuD,WAAW,GACV,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL/G,QAAAA,OAAO,EADF,MAAA;AAELX,QAAAA,OAAO,EAFF,MAAA;AAGLiB,QAAAA,UAAU,EAHL,QAAA;AAILoH,QAAAA,cAAc,EAAE;AAJX;AADT,KAAA,EAQE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL9G,QAAAA,UAAU,EAAE;AADP;AADT,KAAA,EAKGmG,WAAW,CAbhB,SAQE,CARF,EAeE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL/G,QAAAA,OAAO,EADF,cAAA;AAELD,QAAAA,YAAY,EAFP,QAAA;AAGLH,QAAAA,UAAU,EAHL,MAAA;AAILW,QAAAA,UAAU,EAJL,kBAAA;AAKLV,QAAAA,UAAU,EAAEoI,mBAAmB,CAAA,WAAA,EAAA,KAAA;AAL1B;AADT,KAAA,EASGf,mBAAmB,CAzB1B,WAyB0B,CATtB,CAfF,CADF,EA4BE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLI,QAAAA,IAAI,EADC,GAAA;AAELE,QAAAA,QAAQ,EAAE;AAFL;AADT,KAAA,EAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL3H,QAAAA,UAAU,EAAE1B,KAAK,CADZ,aAAA;AAEL6B,QAAAA,OAAO,EAAE;AAFJ;AADT,KAAA,EANF,SAME,CANF,EAcE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,OAAO,EAAE;AADJ;AADT,KAAA,EAKE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,eAAM+G,WAAW,CAAjB,KAAMA,EAAN;AADX,OAAA;AAEE,MAAA,QAAQ,EAAEA,WAAW,CAAXA,KAAAA,CAFZ,UAAA;AAGE,MAAA,KAAK,EAAE;AACLlH,QAAAA,UAAU,EAAE1B,KAAK,CAACyF;AADb;AAHT,KAAA,EALF,SAKE,CALF,EAAA,GAAA,EAcE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,eACP,UAAA,CAAA,UAAA,CAAA,aAAA,CAAyB,UAAA,CAAA,EAAC;AAAA,iBAAIkC,CAAC,KAAL,WAAA;AADnB,SACP,CADO;AADX,OAAA;AAIE,MAAA,KAAK,EAAE;AACLjG,QAAAA,UAAU,EAAE1B,KAAK,CAACoD;AADb;AAJT,KAAA,EAdF,QAcE,CAdF,EAdF,GAcE,CAdF,EAuCE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACL1B,QAAAA,UAAU,EAAE1B,KAAK,CADZ,aAAA;AAEL6B,QAAAA,OAAO,EAAE;AAFJ;AADT,KAAA,EAvCF,eAuCE,CAvCF,EA+CE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,OAAO,EAAE;AADJ;AADT,KAAA,EAKE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,KAAK,EADP,MAAA;AAEE,MAAA,KAAK,EAAEgH,eAAe,CAAfA,KAAAA,CAFT,IAAA;AAGE,MAAA,eAAe,EAAE;AAHnB,KAAA,CALF,CA/CF,EA0DE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLnH,QAAAA,UAAU,EAAE1B,KAAK,CADZ,aAAA;AAEL6B,QAAAA,OAAO,EAAE;AAFJ;AADT,KAAA,EA1DF,gBA0DE,CA1DF,EAkEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,OAAO,EAAE;AADJ;AADT,KAAA,EAKE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,KAAK,EADP,OAAA;AAEE,MAAA,KAAK,EAFP,eAAA;AAGE,MAAA,eAAe,EAAE;AACfkI,QAAAA,QAAQ,EAAE;AADK;AAHnB,KAAA,CALF,CAlEF,CA5BF,CADU,GA+GV,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,KAAK,EAAE;AACLlI,QAAAA,OAAO,EAAE;AADJ;AADT,KAAA,EArTV,iCAqTU,CA/HJ,CApLF,CADF,CADF;AAxEG,GAAgC,CAAvC","sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return matchedItems.sort(sortRankedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rankedItem = _getHighestRanking.rankedItem,\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex,\n        _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n        keyThreshold = _getHighestRanking$ke === void 0 ? threshold : _getHighestRanking$ke;\n\n    if (rank >= keyThreshold) {\n      matches.push({\n        rankedItem: rankedItem,\n        item: item,\n        rank: rank,\n        index: index,\n        keyIndex: keyIndex\n      });\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedItem: item,\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedItem = _ref2.rankedItem,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedItem = rankedItem;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedItem = itemValue;\n    }\n\n    return {\n      rankedItem: newRankedItem,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank); // Lower casing before further comparison\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  } // starts with\n\n\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  } // word starts with\n\n\n  if (testString.indexOf(\" \" + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  } // is a part inside a cased string\n\n\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  } // is acronym for a cased string\n\n\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  } // contains\n\n\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\n\n\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\n\n\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n\n    default:\n      return false;\n  }\n}\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\n\n\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * (1 / spread);\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedItems(a, b) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRankedItem = a.rankedItem,\n      aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRankedItem = b.rankedItem,\n      bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      // localeCompare returns 0 if both values are equal,\n      // so we rely on JS engines stably sorting the results\n      // (de facto, all modern engine do this).\n      return String(aRankedItem).localeCompare(bRankedItem);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item); // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  } // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n\n\n  return value != null ? [].concat(value) : null;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n\n    return allVals;\n  }, []);\n}\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\n\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = {\n      key: key\n    };\n  }\n\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\nexport default matchSorter;\nexport { rankings };\n","import React from 'react'\n\nconst getItem = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key))\n  } catch {\n    return undefined\n  }\n}\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = React.useState(() => {\n    const val = getItem(key)\n    if (typeof val === 'undefined' || val === null) {\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue\n    }\n    return val\n  })\n\n  const setter = React.useCallback(\n    updater => {\n      setValue(old => {\n        let newVal = updater\n\n        if (typeof updater == 'function') {\n          newVal = updater(old)\n        }\n        try {\n          localStorage.setItem(key, JSON.stringify(newVal))\n        } catch {}\n\n        return newVal\n      })\n    },\n    [key]\n  )\n\n  return [value, setter]\n}\n","import React from 'react'\n\nconst ThemeContext = React.createContext()\n\nexport function ThemeProvider({ theme, ...rest }) {\n  return <ThemeContext.Provider value={theme} {...rest} />\n}\n\nexport function useTheme() {\n  return React.useContext(ThemeContext)\n}\n","import React from 'react'\n\nexport default function useMediaQuery(query) {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(\n    () => window.matchMedia && window.matchMedia(query).matches\n  )\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (!window.matchMedia) {\n      return\n    }\n\n    // Create a matcher\n    const matcher = window.matchMedia(query)\n\n    // Create our handler\n    const onChange = ({ matches }) => setIsMatch(matches)\n\n    // Listen for changes\n    matcher.addListener(onChange)\n\n    return () => {\n      // Stop listening for changes\n      matcher.removeListener(onChange)\n    }\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n","import React from 'react'\n\nimport { useTheme } from './theme'\nimport useMediaQuery from './useMediaQuery'\n\nexport function getQueryStatusColor(query, theme) {\n  return query.state.isFetching\n    ? theme.active\n    : !query.instances.length\n    ? theme.gray\n    : query.state.isStale\n    ? theme.warning\n    : theme.success\n}\n\nexport function getQueryStatusLabel(query) {\n  return query.state.isFetching\n    ? 'fetching'\n    : !query.instances.length\n    ? 'inactive'\n    : query.state.isStale\n    ? 'stale'\n    : 'fresh'\n}\n\nexport function styled(type, newStyles, queries = {}) {\n  return React.forwardRef(({ style, ...rest }, ref) => {\n    const theme = useTheme()\n\n    const mediaStyles = Object.entries(queries).reduce(\n      (current, [key, value]) => {\n        return useMediaQuery(key)\n          ? {\n              ...current,\n              ...(typeof value === 'function' ? value(rest, theme) : value),\n            }\n          : current\n      },\n      {}\n    )\n\n    return React.createElement(type, {\n      ...rest,\n      style: {\n        ...(typeof newStyles === 'function'\n          ? newStyles(rest, theme)\n          : newStyles),\n        ...style,\n        ...mediaStyles,\n      },\n      ref,\n    })\n  })\n}\n","import { styled } from './utils'\n\nexport const Panel = styled(\n  'div',\n  (props, theme) => ({\n    fontSize: '1rem',\n    display: 'flex',\n    backgroundColor: theme.background,\n    color: theme.foreground,\n  }),\n  {\n    '(max-width: 600px)': {\n      fontSize: '.9rem',\n      flexDirection: 'column',\n    },\n  }\n)\n\nexport const Button = styled('button', (props, theme) => ({\n  appearance: 'none',\n  fontSize: '.9rem',\n  fontWeight: 'bold',\n  background: theme.gray,\n  border: '0',\n  borderRadius: '.3rem',\n  color: 'white',\n  padding: '.5rem',\n  opacity: props.disabled ? '.5' : undefined,\n  cursor: 'pointer',\n}))\n\nexport const QueryKeys = styled('span', {\n  display: 'inline-block',\n  fontSize: '0.9rem',\n})\n\nexport const QueryKey = styled('span', {\n  display: 'inline-flex',\n  alignItems: 'center',\n  padding: '.2rem .4rem',\n  fontWeight: 'bold',\n  textShadow: '0 0 10px black',\n  borderRadius: '.2rem',\n})\n\nexport const Code = styled('code', {\n  fontSize: '.9rem',\n})\n\nexport const Input = styled('input', {\n  border: 0,\n  borderRadius: '.2rem',\n  fontSize: '.9rem',\n  padding: '.3rem .4rem',\n})\n\nexport const Select = styled('select', {\n  display: `inline-block`,\n  fontSize: `.9rem`,\n  fontFamily: `sans-serif`,\n  fontWeight: 'normal',\n  lineHeight: `1.3`,\n  padding: `.3rem 1.5rem .3rem .5rem`,\n  height: 'auto',\n  border: 0,\n  borderRadius: `.2rem`,\n  appearance: `none`,\n  WebkitAppearance: 'none',\n  backgroundColor: `#fff`,\n  backgroundImage: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23444444'><polygon points='0,25 100,25 50,75'/></svg>\")`,\n  backgroundRepeat: `no-repeat`,\n  backgroundPosition: `right .55rem center`,\n  backgroundSize: `.65em auto, 100%`,\n})\n","import React from 'react'\n\nimport { styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '0.9rem',\n  lineHeight: '1.7',\n  outline: 'none',\n})\n\nexport const Label = styled('span', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const Value = styled('span', (props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1rem',\n  paddingLeft: '1rem',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7rem',\n})\n\nexport const Expander = ({ expanded, style = {}, ...rest }) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    ▶\n  </span>\n)\n\nconst DefaultRenderer = ({\n  handleEntry,\n  label,\n  value,\n  // path,\n  subEntries,\n  subEntryPages,\n  // depth,\n  expanded,\n  toggle,\n  pageSize,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState([])\n\n  return (\n    <Entry key={label}>\n      {subEntryPages?.length ? (\n        <>\n          <Label onClick={() => toggle()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>{subEntries.length} items</Info>\n          </Label>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map(entry => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <Label\n                        onClick={() =>\n                          setExpandedPages(old =>\n                            old.includes(index)\n                              ? old.filter(d => d !== index)\n                              : [...old, index]\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </Label>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map(entry => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{JSON.stringify(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  ...rest\n}) {\n  const [expanded, setExpanded] = React.useState(defaultExpanded)\n\n  const toggle = set => {\n    setExpanded(old => (typeof set !== 'undefined' ? set : !old))\n  }\n\n  const path = []\n  const depth = 0\n\n  let type = typeof value\n  let subEntries\n  let subEntryPages = []\n\n  const makeProperty = sub => {\n    const newPath = path.concat(sub.label)\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      path: newPath,\n      depth: depth + 1,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i,\n        value: d,\n      })\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([label, value]) =>\n      makeProperty({\n        label,\n        value,\n      })\n    )\n  }\n\n  if (subEntries) {\n    let i = 0\n\n    while (i < subEntries.length) {\n      subEntryPages.push(subEntries.slice(i, i + pageSize))\n      i = i + pageSize\n    }\n  }\n\n  return renderer({\n    handleEntry: entry => (\n      <Explorer key={entry.label} renderer={renderer} {...rest} {...entry} />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    depth,\n    value,\n    path,\n    expanded,\n    toggle,\n    pageSize,\n    ...rest,\n  })\n}\n","import React from 'react'\nimport match from 'match-sorter'\nimport { queryCache } from 'react-query'\nimport useLocalStorage from './useLocalStorage'\n\n//\n\nimport pkg from '../package.json'\nimport {\n  Panel,\n  QueryKeys,\n  QueryKey,\n  Button,\n  Code,\n  Input,\n  Select,\n} from './styledComponents'\nimport { ThemeProvider } from './theme'\nimport { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\n\nconst isServer = typeof window === 'undefined'\n\nconst theme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  warning: '#ffb200',\n}\n\nexport function ReactQueryDevtools({\n  initialIsOpen,\n  panelProps = {},\n  closeButtonProps = {},\n  toggleButtonProps = {},\n}) {\n  const rootRef = React.useRef()\n  const panelRef = React.useRef()\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'reactQueryDevtoolsOpen',\n    initialIsOpen\n  )\n  const [isResolvedOpen, setIsResolvedOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    setIsResolvedOpen(isOpen)\n  }, [isOpen, isResolvedOpen])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    if (isResolvedOpen) {\n      const previousValue = rootRef.current?.parentElement.style.paddingBottom\n\n      const run = () => {\n        const containerHeight = panelRef.current?.getBoundingClientRect().height\n        rootRef.current.parentElement.style.paddingBottom = `${containerHeight}px`\n      }\n\n      run()\n\n      window.addEventListener('resize', run)\n\n      return () => {\n        window.removeEventListener('resize', run)\n        rootRef.current.parentElement.style.paddingBottom = previousValue\n      }\n    }\n  }, [isResolvedOpen])\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n  const {\n    style: closeButtonStyle = {},\n    onClick: onCloseClick,\n    ...otherCloseButtonProps\n  } = closeButtonProps\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  return (\n    <div ref={rootRef} className=\"ReactQueryDevtools\">\n      {isResolvedOpen ? (\n        <ThemeProvider theme={theme}>\n          <ReactQueryDevtoolsPanel\n            ref={panelRef}\n            {...otherPanelProps}\n            style={{\n              position: 'fixed',\n              bottom: '0',\n              right: '0',\n              zIndex: '99999',\n              width: '100%',\n              height: '500px',\n              maxHeight: '50%',\n              boxShadow: '0 0 20px rgba(0,0,0,.3)',\n              borderTop: `1px solid ${theme.gray}`,\n              ...panelStyle,\n            }}\n          />\n          <Button\n            {...otherCloseButtonProps}\n            onClick={() => {\n              setIsOpen(false)\n              onCloseClick && onCloseClick()\n            }}\n            style={{\n              position: 'fixed',\n              bottom: '0',\n              right: '0',\n              zIndex: '99999',\n              margin: '.5rem',\n              ...closeButtonStyle,\n            }}\n          >\n            Close\n          </Button>\n        </ThemeProvider>\n      ) : (\n        <div\n          {...otherToggleButtonProps}\n          onClick={() => {\n            setIsOpen(true)\n            onToggleClick && onToggleClick()\n          }}\n          style={{\n            position: 'fixed',\n            bottom: '0',\n            right: '0',\n            zIndex: '99999',\n            display: 'inline-block',\n            fontSize: '1.5rem',\n            margin: '.5rem',\n            cursor: 'pointer',\n            textShadow: 'rgba(0,0,0,0.4) 0px 5px 10px',\n            ...toggleButtonStyle,\n          }}\n        >\n          <span>🎛</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst getStatusRank = q =>\n  q.state.isFetching ? 0 : !q.instances.length ? 3 : q.state.isStale ? 2 : 1\n\nconst sortFns = {\n  'Status > Last Updated': (a, b) =>\n    getStatusRank(a) === getStatusRank(b)\n      ? sortFns['Last Updated'](a, b)\n      : getStatusRank(a) > getStatusRank(b)\n      ? 1\n      : -1,\n  'Query Hash': (a, b) => (a.queryHash > b.queryHash ? 1 : -1),\n  'Last Updated': (a, b) => (a.state.updatedAt < b.state.updatedAt ? 1 : -1),\n}\n\nexport const ReactQueryDevtoolsPanel = React.forwardRef(\n  function ReactQueryDevtoolsPanel(props, ref) {\n    const [sort, setSort] = useLocalStorage(\n      'reactQueryDevtoolsSortFn',\n      Object.keys(sortFns)[0]\n    )\n\n    const [filter, setFilter] = useLocalStorage('reactQueryDevtoolsFilter', '')\n\n    const [sortDesc, setSortDesc] = useLocalStorage(\n      'reactQueryDevtoolsSortDesc',\n      false\n    )\n\n    const sortFn = React.useMemo(() => sortFns[sort], [sort])\n\n    React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n      if (!sortFn) {\n        setSort(Object.keys(sortFns)[0])\n      }\n    }, [setSort, sortFn])\n\n    const [unsortedQueries, setUnsortedQueries] = React.useState(\n      Object.values(queryCache.queries)\n    )\n\n    const [activeQueryHash, setActiveQueryHash] = React.useState(null)\n\n    const queries = React.useMemo(() => {\n      const sorted = [...unsortedQueries].sort(sortFn)\n\n      if (sortDesc) {\n        sorted.reverse()\n      }\n\n      return match(sorted, filter, { keys: ['queryHash'] })\n    }, [sortDesc, sortFn, unsortedQueries, filter])\n\n    const [activeQuery, activeQueryJson] = React.useMemo(() => {\n      const activeQuery = queries.find(\n        query => query.queryHash === activeQueryHash\n      )\n\n      return [\n        activeQuery,\n        activeQuery ? JSON.parse(JSON.stringify(activeQuery)) : null,\n      ]\n    }, [activeQueryHash, queries])\n\n    const hasFresh = queries.filter(q => getQueryStatusLabel(q) === 'fresh')\n      .length\n    const hasFetching = queries.filter(\n      q => getQueryStatusLabel(q) === 'fetching'\n    ).length\n    const hasStale = queries.filter(q => getQueryStatusLabel(q) === 'stale')\n      .length\n    const hasInactive = queries.filter(\n      q => getQueryStatusLabel(q) === 'inactive'\n    ).length\n\n    React.useEffect(() => {\n      return queryCache.subscribe(queryCache => {\n        setUnsortedQueries(Object.values(queryCache.queries))\n      })\n    }, [sort, sortFn, sortDesc])\n\n    React.useEffect(() => {\n      if (activeQueryHash && !activeQuery) {\n        setActiveQueryHash(null)\n      }\n    }, [activeQuery, activeQueryHash])\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Panel ref={ref} className=\"ReactQueryDevtoolsPanel\" {...props}>\n          <div\n            style={{\n              flex: '1 1 50%',\n              minHeight: '33%',\n              overflow: 'auto',\n              borderRight: `1px solid ${theme.grayAlt}`,\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5rem',\n                background: theme.backgroundAlt,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              }}\n            >\n              <div\n                style={{\n                  fontSize: '1.2rem',\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <div\n                  style={{\n                    marginBottom: '.5rem',\n                    opacity: 0.3,\n                  }}\n                >\n                  React Query Devtools <small>v{pkg.version}</small>\n                </div>\n                <div\n                  style={{\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Queries ({queries.length})\n                </div>\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <QueryKeys style={{ marginBottom: '.5rem' }}>\n                  <QueryKey\n                    style={{\n                      background: theme.success,\n                      opacity: hasFresh ? 1 : 0.3,\n                    }}\n                  >\n                    fresh <Code>({hasFresh})</Code>\n                  </QueryKey>{' '}\n                  <QueryKey\n                    style={{\n                      background: theme.active,\n                      opacity: hasFetching ? 1 : 0.3,\n                    }}\n                  >\n                    fetching <Code>({hasFetching})</Code>\n                  </QueryKey>{' '}\n                  <QueryKey\n                    style={{\n                      background: theme.warning,\n                      color: 'black',\n                      textShadow: '0',\n                      opacity: hasStale ? 1 : 0.3,\n                    }}\n                  >\n                    stale <Code>({hasStale})</Code>\n                  </QueryKey>{' '}\n                  <QueryKey\n                    style={{\n                      background: theme.gray,\n                      opacity: hasInactive ? 1 : 0.3,\n                    }}\n                  >\n                    inactive <Code>({hasInactive})</Code>\n                  </QueryKey>\n                </QueryKeys>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Input\n                    placeholder=\"Filter\"\n                    value={filter}\n                    onChange={e => setFilter(e.target.value)}\n                    onKeyDown={e => {\n                      if (e.key === 'Escape') setFilter('')\n                    }}\n                    style={{\n                      flex: '1',\n                      marginRight: '.5rem',\n                    }}\n                  />\n                  <Select\n                    value={sort}\n                    onChange={e => setSort(e.target.value)}\n                    style={{\n                      flex: '1',\n                      marginRight: '.5rem',\n                    }}\n                  >\n                    {Object.keys(sortFns).map(key => (\n                      <option key={key} value={key}>\n                        Sort by {key}\n                      </option>\n                    ))}\n                  </Select>\n                  <Button\n                    onClick={() => setSortDesc(old => !old)}\n                    style={{\n                      padding: '.2rem .4rem',\n                    }}\n                  >\n                    {sortDesc ? '⬇ Desc' : '⬆ Asc'}\n                  </Button>\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                overflow: 'auto',\n              }}\n            >\n              {queries.map(query => (\n                <div\n                  key={query.queryHash}\n                  onClick={() => setActiveQueryHash(query.queryHash)}\n                  style={{\n                    display: 'flex',\n                    borderBottom: `solid 1px ${theme.grayAlt}`,\n                    cursor: 'pointer',\n                    background:\n                      query === activeQuery\n                        ? 'rgba(255,255,255,.1)'\n                        : undefined,\n                  }}\n                >\n                  <div\n                    style={{\n                      flex: '0 0 auto',\n                      width: '2rem',\n                      height: '2rem',\n                      background: getQueryStatusColor(query, theme),\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 'bold',\n                      textShadow:\n                        getQueryStatusLabel(query) === 'stale'\n                          ? '0'\n                          : '0 0 10px black',\n                      color:\n                        getQueryStatusLabel(query) === 'stale'\n                          ? 'black'\n                          : 'white',\n                    }}\n                  >\n                    {query.instances.length}\n                  </div>\n                  <Code\n                    style={{\n                      padding: '.5rem',\n                    }}\n                  >\n                    {query.queryHash}\n                  </Code>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div\n            style={{\n              flex: '1 1 50%',\n              display: 'flex',\n              flexDirection: 'column',\n              overflow: 'auto',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5rem',\n                background: theme.backgroundAlt,\n              }}\n            >\n              Query Details\n            </div>\n            {activeQuery ? (\n              <>\n                <div\n                  style={{\n                    padding: '1rem',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <Code\n                    style={{\n                      lineHeight: '1.8rem',\n                    }}\n                  >\n                    {activeQuery.queryHash}\n                  </Code>\n                  <span\n                    style={{\n                      padding: '0.3rem .6rem',\n                      borderRadius: '0.4rem',\n                      fontWeight: 'bold',\n                      textShadow: '0 2px 10px black',\n                      background: getQueryStatusColor(activeQuery, theme),\n                    }}\n                  >\n                    {getQueryStatusLabel(activeQuery)}\n                  </span>\n                </div>\n                <div\n                  style={{\n                    flex: '1',\n                    overflow: 'auto',\n                  }}\n                >\n                  <div\n                    style={{\n                      background: theme.backgroundAlt,\n                      padding: '.5rem',\n                    }}\n                  >\n                    Actions\n                  </div>\n                  <div\n                    style={{\n                      padding: '1rem',\n                    }}\n                  >\n                    <Button\n                      onClick={() => activeQuery.fetch()}\n                      disabled={activeQuery.state.isFetching}\n                      style={{\n                        background: theme.active,\n                      }}\n                    >\n                      Refetch\n                    </Button>{' '}\n                    <Button\n                      onClick={() =>\n                        queryCache.removeQueries(q => q === activeQuery)\n                      }\n                      style={{\n                        background: theme.danger,\n                      }}\n                    >\n                      Remove\n                    </Button>{' '}\n                  </div>\n                  <div\n                    style={{\n                      background: theme.backgroundAlt,\n                      padding: '.5rem',\n                    }}\n                  >\n                    Data Explorer\n                  </div>\n                  <div\n                    style={{\n                      padding: '.5rem',\n                    }}\n                  >\n                    <Explorer\n                      label=\"Data\"\n                      value={activeQueryJson.state.data}\n                      defaultExpanded={{}}\n                    />\n                  </div>\n                  <div\n                    style={{\n                      background: theme.backgroundAlt,\n                      padding: '.5rem',\n                    }}\n                  >\n                    Query Explorer\n                  </div>\n                  <div\n                    style={{\n                      padding: '.5rem',\n                    }}\n                  >\n                    <Explorer\n                      label=\"Query\"\n                      value={activeQueryJson}\n                      defaultExpanded={{\n                        queryKey: true,\n                      }}\n                    />\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div\n                style={{\n                  padding: '1rem',\n                }}\n              >\n                Select a query for more info...\n              </div>\n            )}\n          </div>\n        </Panel>\n      </ThemeProvider>\n    )\n  }\n)\n"]},"metadata":{},"sourceType":"script"}